{"@timestamp":"2020-05-26T13:04:02.690+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"ScalaTest-run-running-PostRouterSpec","message":"onClientError: statusCode = 404, uri = /v1/posts/, message = "}
{"@timestamp":"2020-05-26T13:04:03.083+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"ScalaTest-run-running-PostRouterSpec","message":"onClientError: statusCode = 404, uri = /v1/posts/, message = "}
{"@timestamp":"2020-05-26T13:09:37.827+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-12","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-26T13:09:37.837+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-12","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-26T13:09:38.129+02:00","level":"TRACE","logger_name":"v1.post.PostActionBuilder","thread_name":"application-akka.actor.default-dispatcher-6","message":"invokeBlock: ","id":1,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:09:38.132+02:00","level":"TRACE","logger_name":"v1.post.PostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"index: ","id":1,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:09:38.136+02:00","level":"TRACE","logger_name":"v1.post.PostRepositoryImpl","thread_name":"application-repository.dispatcher-7","message":"list: ","id":1,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:10:30.111+02:00","level":"TRACE","logger_name":"v1.post.PostActionBuilder","thread_name":"application-akka.actor.default-dispatcher-9","message":"invokeBlock: ","id":2,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:10:30.115+02:00","level":"TRACE","logger_name":"v1.post.PostController","thread_name":"application-akka.actor.default-dispatcher-9","message":"show: id = 1","id":2,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:10:30.177+02:00","level":"TRACE","logger_name":"v1.post.PostRepositoryImpl","thread_name":"application-repository.dispatcher-10","message":"get: id = 1","id":2,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:11:24.857+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-11","message":"onClientError: statusCode = 404, uri = /v1/posts/1/, message = "}
{"@timestamp":"2020-05-26T13:11:54.164+02:00","level":"TRACE","logger_name":"v1.post.PostActionBuilder","thread_name":"application-akka.actor.default-dispatcher-12","message":"invokeBlock: ","id":4,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:11:54.165+02:00","level":"TRACE","logger_name":"v1.post.PostController","thread_name":"application-akka.actor.default-dispatcher-12","message":"process: ","id":4,"host":"localhost:9000","remoteAddress":"0:0:0:0:0:0:0:1"}
{"@timestamp":"2020-05-26T13:13:22.851+02:00","level":"TRACE","logger_name":"v1.post.PostActionBuilder","thread_name":"application-akka.actor.default-dispatcher-5","message":"invokeBlock: ","id":1,"host":"localhost:9000","remoteAddress":"127.0.0.1"}
{"@timestamp":"2020-05-26T13:13:22.853+02:00","level":"TRACE","logger_name":"v1.post.PostController","thread_name":"application-akka.actor.default-dispatcher-5","message":"index: ","id":1,"host":"localhost:9000","remoteAddress":"127.0.0.1"}
{"@timestamp":"2020-05-26T13:13:22.860+02:00","level":"TRACE","logger_name":"v1.post.PostRepositoryImpl","thread_name":"application-repository.dispatcher-7","message":"list: ","id":1,"host":"localhost:9000","remoteAddress":"127.0.0.1"}
{"@timestamp":"2020-05-26T13:13:23.724+02:00","level":"TRACE","logger_name":"v1.post.PostActionBuilder","thread_name":"application-akka.actor.default-dispatcher-6","message":"invokeBlock: ","id":2,"host":"localhost:9000","remoteAddress":"127.0.0.1"}
{"@timestamp":"2020-05-26T13:13:23.724+02:00","level":"TRACE","logger_name":"v1.post.PostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"index: ","id":2,"host":"localhost:9000","remoteAddress":"127.0.0.1"}
{"@timestamp":"2020-05-26T13:13:23.737+02:00","level":"TRACE","logger_name":"v1.post.PostRepositoryImpl","thread_name":"application-repository.dispatcher-10","message":"list: ","id":2,"host":"localhost:9000","remoteAddress":"127.0.0.1"}
{"@timestamp":"2020-05-26T15:57:22.859+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-8","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-26T15:57:22.875+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-8","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-26T16:02:44.592+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-26T16:02:44.595+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-26T17:04:08.149+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-27","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-26T17:04:08.153+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-27","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-26T17:04:08.344+02:00","level":"ERROR","logger_name":"ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-6","message":"\n\n! @7g0hb18eh - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[JsResultException: JsResultException(errors:List((,List(JsonValidationError(List('name' is undefined on object: {\"board\":\"8x8\"}),ArraySeq())))))]]\r\n\tat play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:359)\r\n\tat play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:261)\r\n\tat play.core.server.AkkaHttpServer$$anonfun$2.applyOrElse(AkkaHttpServer.scala:429)\r\n\tat play.core.server.AkkaHttpServer$$anonfun$2.applyOrElse(AkkaHttpServer.scala:421)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:453)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: play.api.libs.json.JsResultException: JsResultException(errors:List((,List(JsonValidationError(List('name' is undefined on object: {\"board\":\"8x8\"}),ArraySeq())))))\r\n\tat play.api.libs.json.JsReadable.$anonfun$as$2(JsReadable.scala:25)\r\n\tat play.api.libs.json.JsError.fold(JsResult.scala:66)\r\n\tat play.api.libs.json.JsReadable.as(JsReadable.scala:24)\r\n\tat play.api.libs.json.JsReadable.as$(JsReadable.scala:23)\r\n\tat play.api.libs.json.JsUndefined.as(JsLookup.scala:193)\r\n\tat controllers.ChessPostController.$anonfun$solveGame$1(ChessPostController.scala:29)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.mvc.ActionBuilderImpl.invokeBlock(Action.scala:441)\r\n\tat play.api.mvc.ActionBuilderImpl.invokeBlock(Action.scala:439)\r\n\tat play.api.mvc.ActionBuilder$$anon$8.invokeBlock(Action.scala:289)\r\n\tat play.api.mvc.ActionBuilder$$anon$8.invokeBlock(Action.scala:284)\r\n\tat play.api.mvc.ActionBuilder$$anon$9.apply(Action.scala:379)\r\n\tat play.api.mvc.Action.$anonfun$apply$4(Action.scala:82)\r\n\tat play.api.libs.streams.StrictAccumulator.$anonfun$mapFuture$4(Accumulator.scala:168)\r\n\tat scala.util.Try$.apply(Try.scala:210)\r\n\tat play.api.libs.streams.StrictAccumulator.$anonfun$mapFuture$3(Accumulator.scala:168)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\t... 11 common frames omitted\r\n"}
{"@timestamp":"2020-05-26T17:04:45.586+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-26","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-26T17:04:45.589+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-26","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-26T17:36:49.570+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-39","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-26T17:36:49.573+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-39","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-26T17:38:10.519+02:00","level":"ERROR","logger_name":"ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-7","message":"\n\n! @7g0hfdde0 - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[JsResultException: JsResultException(errors:List((,List(JsonValidationError(List('board' is undefined on object: {\"dimension\":8,\"pieces\":\"K4\"}),ArraySeq())))))]]\r\n\tat play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:359)\r\n\tat play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:261)\r\n\tat play.core.server.AkkaHttpServer$$anonfun$2.applyOrElse(AkkaHttpServer.scala:429)\r\n\tat play.core.server.AkkaHttpServer$$anonfun$2.applyOrElse(AkkaHttpServer.scala:421)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:453)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: play.api.libs.json.JsResultException: JsResultException(errors:List((,List(JsonValidationError(List('board' is undefined on object: {\"dimension\":8,\"pieces\":\"K4\"}),ArraySeq())))))\r\n\tat play.api.libs.json.JsReadable.$anonfun$as$2(JsReadable.scala:25)\r\n\tat play.api.libs.json.JsError.fold(JsResult.scala:66)\r\n\tat play.api.libs.json.JsReadable.as(JsReadable.scala:24)\r\n\tat play.api.libs.json.JsReadable.as$(JsReadable.scala:23)\r\n\tat play.api.libs.json.JsUndefined.as(JsLookup.scala:193)\r\n\tat controllers.ChessPostController.$anonfun$solveGame$1(ChessPostController.scala:26)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.mvc.ActionBuilderImpl.invokeBlock(Action.scala:441)\r\n\tat play.api.mvc.ActionBuilderImpl.invokeBlock(Action.scala:439)\r\n\tat play.api.mvc.ActionBuilder$$anon$8.invokeBlock(Action.scala:289)\r\n\tat play.api.mvc.ActionBuilder$$anon$8.invokeBlock(Action.scala:284)\r\n\tat play.api.mvc.ActionBuilder$$anon$9.apply(Action.scala:379)\r\n\tat play.api.mvc.Action.$anonfun$apply$4(Action.scala:82)\r\n\tat play.api.libs.streams.StrictAccumulator.$anonfun$mapFuture$4(Accumulator.scala:168)\r\n\tat scala.util.Try$.apply(Try.scala:210)\r\n\tat play.api.libs.streams.StrictAccumulator.$anonfun$mapFuture$3(Accumulator.scala:168)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\t... 11 common frames omitted\r\n"}
{"@timestamp":"2020-05-26T17:41:03.221+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-47","message":"\n\n! @7g0hfn8lj - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.sbt.PlayExceptions$CompilationException: Compilation error[No Json serializer found for type controllers.PostFormInput. Try to implement an implicit Writes or Format for this type.]\r\n\tat play.sbt.PlayExceptions$CompilationException$.apply(PlayExceptions.scala:34)\r\n\tat play.sbt.PlayExceptions$CompilationException$.apply(PlayExceptions.scala:34)\r\n\tat scala.Option.map(Option.scala:230)\r\n\tat play.sbt.run.PlayReload$.$anonfun$taskFailureHandler$1(PlayReload.scala:40)\r\n\tat scala.Option.map(Option.scala:230)\r\n\tat play.sbt.run.PlayReload$.taskFailureHandler(PlayReload.scala:35)\r\n\tat play.sbt.run.PlayReload$.compileFailure(PlayReload.scala:28)\r\n\tat play.sbt.run.PlayReload$.$anonfun$compile$3(PlayReload.scala:63)\r\n\tat scala.util.Either$LeftProjection.map(Either.scala:573)\r\n\tat play.sbt.run.PlayReload$.compile(PlayReload.scala:63)\r\n\tat play.sbt.run.PlayRun$.$anonfun$playRunTask$4(PlayRun.scala:78)\r\n\tat play.runsupport.Reloader.$anonfun$reload$1(Reloader.scala:496)\r\n\tat play.runsupport.Reloader$$anon$1.run(Reloader.scala:57)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat play.runsupport.Reloader$.play$runsupport$Reloader$$withReloaderContextClassLoader(Reloader.scala:63)\r\n\tat play.runsupport.Reloader.reload(Reloader.scala:496)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:141)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-26T17:41:21.703+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-48","message":"\n\n! @7g0hfoa94 - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.sbt.PlayExceptions$CompilationException: Compilation error[No Json serializer found for type controllers.PostFormInput. Try to implement an implicit Writes or Format for this type.]\r\n\tat play.sbt.PlayExceptions$CompilationException$.apply(PlayExceptions.scala:34)\r\n\tat play.sbt.PlayExceptions$CompilationException$.apply(PlayExceptions.scala:34)\r\n\tat scala.Option.map(Option.scala:230)\r\n\tat play.sbt.run.PlayReload$.$anonfun$taskFailureHandler$1(PlayReload.scala:40)\r\n\tat scala.Option.map(Option.scala:230)\r\n\tat play.sbt.run.PlayReload$.taskFailureHandler(PlayReload.scala:35)\r\n\tat play.sbt.run.PlayReload$.compileFailure(PlayReload.scala:28)\r\n\tat play.sbt.run.PlayReload$.$anonfun$compile$3(PlayReload.scala:63)\r\n\tat scala.util.Either$LeftProjection.map(Either.scala:573)\r\n\tat play.sbt.run.PlayReload$.compile(PlayReload.scala:63)\r\n\tat play.sbt.run.PlayRun$.$anonfun$playRunTask$4(PlayRun.scala:78)\r\n\tat play.runsupport.Reloader.$anonfun$reload$1(Reloader.scala:496)\r\n\tat play.runsupport.Reloader$$anon$1.run(Reloader.scala:57)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat play.runsupport.Reloader$.play$runsupport$Reloader$$withReloaderContextClassLoader(Reloader.scala:63)\r\n\tat play.runsupport.Reloader.reload(Reloader.scala:496)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:141)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-26T17:45:45.162+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-7","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-26T17:45:45.174+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-7","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-27T12:21:50.563+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-13","message":"\n\n! @7g0n71b1d - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.UnexpectedException: Unexpected exception[CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for solvers.chess.ChessAsyncSolver was bound.\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  at play.api.inject.RoutesProvider$.bindingsFromConfiguration(BuiltinModule.scala:137):\nBinding(class router.Routes to self) (via modules: com.google.inject.util.Modules$OverrideModule -> play.api.inject.guice.GuiceableModuleConversions$$anon$4)\r\n\r\n1 error]\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:211)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:142)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.google.inject.CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for solvers.chess.ChessAsyncSolver was bound.\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  at play.api.inject.RoutesProvider$.bindingsFromConfiguration(BuiltinModule.scala:137):\nBinding(class router.Routes to self) (via modules: com.google.inject.util.Modules$OverrideModule -> play.api.inject.guice.GuiceableModuleConversions$$anon$4)\r\n\r\n1 error\r\n\tat com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:554)\r\n\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:161)\r\n\tat com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:108)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:87)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:78)\r\n\tat play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:200)\r\n\tat play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:155)\r\n\tat play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)\r\n\tat play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:190)\r\n\tat play.utils.Threads$.withContextClassLoader(Threads.scala:22)\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:182)\r\n\t... 23 common frames omitted\r\n"}
{"@timestamp":"2020-05-27T12:24:26.551+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-23","message":"\n\n! @7g0n7a80n - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.UnexpectedException: Unexpected exception[CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for solvers.chess.MyExecutionContext was bound.\r\n  while locating solvers.chess.MyExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:21)\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n\r\n1 error]\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:211)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:142)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.google.inject.CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for solvers.chess.MyExecutionContext was bound.\r\n  while locating solvers.chess.MyExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:21)\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n\r\n1 error\r\n\tat com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:554)\r\n\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:161)\r\n\tat com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:108)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:87)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:78)\r\n\tat play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:200)\r\n\tat play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:155)\r\n\tat play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)\r\n\tat play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:190)\r\n\tat play.utils.Threads$.withContextClassLoader(Threads.scala:22)\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:182)\r\n\t... 23 common frames omitted\r\n"}
{"@timestamp":"2020-05-27T12:25:06.006+02:00","level":"INFO","logger_name":"play.api.internal.libs.concurrent.CoordinatedShutdownSupport","thread_name":"pool-16-thread-4","message":"Starting synchronous coordinated shutdown with ServerStoppedReason reason and 35000 milliseconds timeout"}
{"@timestamp":"2020-05-27T12:25:06.018+02:00","level":"INFO","logger_name":"play.core.server.AkkaHttpServer","thread_name":"pool-16-thread-4","message":"Stopping Akka HTTP server..."}
{"@timestamp":"2020-05-27T12:25:06.041+02:00","level":"INFO","logger_name":"play.core.server.AkkaHttpServer","thread_name":"play-dev-mode-akka.actor.internal-dispatcher-27","message":"Terminating server binding for /0:0:0:0:0:0:0:0:9000"}
{"@timestamp":"2020-05-27T12:25:06.065+02:00","level":"WARN","logger_name":"akka.actor.CoordinatedShutdown","thread_name":"play-dev-mode-akka.actor.default-dispatcher-24","message":"Task [shutdown-application-dev-mode] failed in phase [service-stop]: Unexpected exception[CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for solvers.chess.MyExecutionContext was bound.\r\n  while locating solvers.chess.MyExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:21)\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n\r\n1 error]"}
{"@timestamp":"2020-05-27T12:25:06.065+02:00","level":"INFO","logger_name":"play.core.server.AkkaHttpServer","thread_name":"play-dev-mode-akka.actor.internal-dispatcher-29","message":"Running provided shutdown stop hooks"}
{"@timestamp":"2020-05-27T12:27:02.428+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-4","message":"\n\n! @7g0n7j4ag - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.UnexpectedException: Unexpected exception[ProvisionException: Unable to provision, see the following errors:\r\n\r\n1) Error injecting constructor, akka.ConfigurationException: Dispatcher [my.executor] not configured\r\n  at solvers.chess.MyExecutionContextImpl.<init>(AsyncSolver.scala:12)\r\n  while locating solvers.chess.MyExecutionContextImpl\r\n  while locating solvers.chess.MyExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:21)\r\n  while locating solvers.chess.ChessAsyncSolverImpl\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  while locating router.Routes\r\n  while locating play.api.inject.RoutesProvider\r\n  while locating play.api.routing.Router\r\n    for the 3rd parameter of RequestHandler.<init>(RequestHandler.scala:20)\r\n  while locating RequestHandler\r\n  while locating play.api.http.HttpRequestHandler\r\n    for the 6th parameter of play.api.DefaultApplication.<init>(Application.scala:178)\r\n  at play.api.DefaultApplication.class(Application.scala:177)\r\n  while locating play.api.DefaultApplication\r\n  while locating play.api.Application\r\n\r\n1 error]\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:211)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:142)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.google.inject.ProvisionException: Unable to provision, see the following errors:\r\n\r\n1) Error injecting constructor, akka.ConfigurationException: Dispatcher [my.executor] not configured\r\n  at solvers.chess.MyExecutionContextImpl.<init>(AsyncSolver.scala:12)\r\n  while locating solvers.chess.MyExecutionContextImpl\r\n  while locating solvers.chess.MyExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:21)\r\n  while locating solvers.chess.ChessAsyncSolverImpl\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  while locating router.Routes\r\n  while locating play.api.inject.RoutesProvider\r\n  while locating play.api.routing.Router\r\n    for the 3rd parameter of RequestHandler.<init>(RequestHandler.scala:20)\r\n  while locating RequestHandler\r\n  while locating play.api.http.HttpRequestHandler\r\n    for the 6th parameter of play.api.DefaultApplication.<init>(Application.scala:178)\r\n  at play.api.DefaultApplication.class(Application.scala:177)\r\n  while locating play.api.DefaultApplication\r\n  while locating play.api.Application\r\n\r\n1 error\r\n\tat com.google.inject.internal.InternalProvisionException.toProvisionException(InternalProvisionException.java:226)\r\n\tat com.google.inject.internal.InjectorImpl$1.get(InjectorImpl.java:1097)\r\n\tat com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1131)\r\n\tat play.api.inject.guice.GuiceInjector.instanceOf(GuiceInjectorBuilder.scala:436)\r\n\tat play.api.inject.guice.GuiceInjector.instanceOf(GuiceInjectorBuilder.scala:431)\r\n\tat play.api.inject.ContextClassLoaderInjector.$anonfun$instanceOf$2(Injector.scala:119)\r\n\tat play.api.inject.ContextClassLoaderInjector.withContext(Injector.scala:128)\r\n\tat play.api.inject.ContextClassLoaderInjector.instanceOf(Injector.scala:119)\r\n\tat play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:155)\r\n\tat play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)\r\n\tat play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:190)\r\n\tat play.utils.Threads$.withContextClassLoader(Threads.scala:22)\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:182)\r\n\t... 23 common frames omitted\r\nCaused by: akka.ConfigurationException: Dispatcher [my.executor] not configured\r\n\tat akka.dispatch.Dispatchers.lookupConfigurator(Dispatchers.scala:161)\r\n\tat akka.dispatch.Dispatchers.lookup(Dispatchers.scala:121)\r\n\tat play.api.libs.concurrent.CustomExecutionContext.<init>(CustomExecutionContext.scala:48)\r\n\tat solvers.chess.MyExecutionContextImpl.<init>(AsyncSolver.scala:12)\r\n\tat solvers.chess.MyExecutionContextImpl$$FastClassByGuice$$f960613f.newInstance(<generated>)\r\n\tat com.google.inject.internal.DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:89)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n\tat com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:168)\r\n\tat com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:39)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.InjectorImpl$1.get(InjectorImpl.java:1094)\r\n\tat com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1131)\r\n\tat play.api.inject.guice.GuiceInjector.instanceOf(GuiceInjectorBuilder.scala:436)\r\n\tat play.api.inject.ContextClassLoaderInjector.$anonfun$instanceOf$3(Injector.scala:120)\r\n\tat play.api.inject.ContextClassLoaderInjector.withContext(Injector.scala:128)\r\n\tat play.api.inject.ContextClassLoaderInjector.instanceOf(Injector.scala:120)\r\n\tat play.api.inject.RoutesProvider.$anonfun$get$2(BuiltinModule.scala:119)\r\n\tat scala.Option.fold(Option.scala:263)\r\n\tat play.api.inject.RoutesProvider.get$lzycompute(BuiltinModule.scala:119)\r\n\tat play.api.inject.RoutesProvider.get(BuiltinModule.scala:114)\r\n\tat play.api.inject.RoutesProvider.get(BuiltinModule.scala:108)\r\n\tat com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:85)\r\n\tat com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:77)\r\n\tat com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:59)\r\n\tat com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:61)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n\tat com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:168)\r\n\tat com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:39)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.InjectorImpl$1.get(InjectorImpl.java:1094)\r\n\t... 34 common frames omitted\r\n"}
{"@timestamp":"2020-05-27T12:27:52.952+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-8","message":"\n\n! @7g0n7m19a - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.UnexpectedException: Unexpected exception[ProvisionException: Unable to provision, see the following errors:\r\n\r\n1) Error injecting constructor, akka.ConfigurationException: Dispatcher [my.executor] not configured\r\n  at solvers.chess.MyExecutionContextImpl.<init>(AsyncSolver.scala:12)\r\n  while locating solvers.chess.MyExecutionContextImpl\r\n  at Module.configure(Module.scala:20) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n  while locating solvers.chess.MyExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:21)\r\n  while locating solvers.chess.ChessAsyncSolverImpl\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  while locating router.Routes\r\n  while locating play.api.inject.RoutesProvider\r\n  while locating play.api.routing.Router\r\n    for the 3rd parameter of RequestHandler.<init>(RequestHandler.scala:20)\r\n  while locating RequestHandler\r\n  while locating play.api.http.HttpRequestHandler\r\n    for the 6th parameter of play.api.DefaultApplication.<init>(Application.scala:178)\r\n  at play.api.DefaultApplication.class(Application.scala:177)\r\n  while locating play.api.DefaultApplication\r\n  while locating play.api.Application\r\n\r\n1 error]\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:211)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:142)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.google.inject.ProvisionException: Unable to provision, see the following errors:\r\n\r\n1) Error injecting constructor, akka.ConfigurationException: Dispatcher [my.executor] not configured\r\n  at solvers.chess.MyExecutionContextImpl.<init>(AsyncSolver.scala:12)\r\n  while locating solvers.chess.MyExecutionContextImpl\r\n  at Module.configure(Module.scala:20) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n  while locating solvers.chess.MyExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:21)\r\n  while locating solvers.chess.ChessAsyncSolverImpl\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  while locating router.Routes\r\n  while locating play.api.inject.RoutesProvider\r\n  while locating play.api.routing.Router\r\n    for the 3rd parameter of RequestHandler.<init>(RequestHandler.scala:20)\r\n  while locating RequestHandler\r\n  while locating play.api.http.HttpRequestHandler\r\n    for the 6th parameter of play.api.DefaultApplication.<init>(Application.scala:178)\r\n  at play.api.DefaultApplication.class(Application.scala:177)\r\n  while locating play.api.DefaultApplication\r\n  while locating play.api.Application\r\n\r\n1 error\r\n\tat com.google.inject.internal.InternalProvisionException.toProvisionException(InternalProvisionException.java:226)\r\n\tat com.google.inject.internal.InjectorImpl$1.get(InjectorImpl.java:1097)\r\n\tat com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1131)\r\n\tat play.api.inject.guice.GuiceInjector.instanceOf(GuiceInjectorBuilder.scala:436)\r\n\tat play.api.inject.guice.GuiceInjector.instanceOf(GuiceInjectorBuilder.scala:431)\r\n\tat play.api.inject.ContextClassLoaderInjector.$anonfun$instanceOf$2(Injector.scala:119)\r\n\tat play.api.inject.ContextClassLoaderInjector.withContext(Injector.scala:128)\r\n\tat play.api.inject.ContextClassLoaderInjector.instanceOf(Injector.scala:119)\r\n\tat play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:155)\r\n\tat play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)\r\n\tat play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:190)\r\n\tat play.utils.Threads$.withContextClassLoader(Threads.scala:22)\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:182)\r\n\t... 23 common frames omitted\r\nCaused by: akka.ConfigurationException: Dispatcher [my.executor] not configured\r\n\tat akka.dispatch.Dispatchers.lookupConfigurator(Dispatchers.scala:161)\r\n\tat akka.dispatch.Dispatchers.lookup(Dispatchers.scala:121)\r\n\tat play.api.libs.concurrent.CustomExecutionContext.<init>(CustomExecutionContext.scala:48)\r\n\tat solvers.chess.MyExecutionContextImpl.<init>(AsyncSolver.scala:12)\r\n\tat solvers.chess.MyExecutionContextImpl$$FastClassByGuice$$f960613f.newInstance(<generated>)\r\n\tat com.google.inject.internal.DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:89)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:114)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n\tat com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:168)\r\n\tat com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:39)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n\tat com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:168)\r\n\tat com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:39)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.InjectorImpl$1.get(InjectorImpl.java:1094)\r\n\tat com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1131)\r\n\tat play.api.inject.guice.GuiceInjector.instanceOf(GuiceInjectorBuilder.scala:436)\r\n\tat play.api.inject.ContextClassLoaderInjector.$anonfun$instanceOf$3(Injector.scala:120)\r\n\tat play.api.inject.ContextClassLoaderInjector.withContext(Injector.scala:128)\r\n\tat play.api.inject.ContextClassLoaderInjector.instanceOf(Injector.scala:120)\r\n\tat play.api.inject.RoutesProvider.$anonfun$get$2(BuiltinModule.scala:119)\r\n\tat scala.Option.fold(Option.scala:263)\r\n\tat play.api.inject.RoutesProvider.get$lzycompute(BuiltinModule.scala:119)\r\n\tat play.api.inject.RoutesProvider.get(BuiltinModule.scala:114)\r\n\tat play.api.inject.RoutesProvider.get(BuiltinModule.scala:108)\r\n\tat com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:85)\r\n\tat com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:77)\r\n\tat com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:59)\r\n\tat com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:61)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.SingleParameterInjector.inject(SingleParameterInjector.java:42)\r\n\tat com.google.inject.internal.SingleParameterInjector.getAll(SingleParameterInjector.java:65)\r\n\tat com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:113)\r\n\tat com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:91)\r\n\tat com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:306)\r\n\tat com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n\tat com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:168)\r\n\tat com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:39)\r\n\tat com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:62)\r\n\tat com.google.inject.internal.InjectorImpl$1.get(InjectorImpl.java:1094)\r\n\t... 34 common frames omitted\r\n"}
{"@timestamp":"2020-05-27T13:19:29.424+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"\n\n! @7g0neg5o6 - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.UnexpectedException: Unexpected exception[CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for play.api.libs.concurrent.CustomExecutionContext was bound.\r\n  while locating play.api.libs.concurrent.CustomExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:20)\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n\r\n1 error]\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:211)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:142)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.google.inject.CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for play.api.libs.concurrent.CustomExecutionContext was bound.\r\n  while locating play.api.libs.concurrent.CustomExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolverImpl.<init>(AsyncSolver.scala:20)\r\n  at Module.configure(Module.scala:19) (via modules: com.google.inject.util.Modules$OverrideModule -> Module)\r\n\r\n1 error\r\n\tat com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:554)\r\n\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:161)\r\n\tat com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:108)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:87)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:78)\r\n\tat play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:200)\r\n\tat play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:155)\r\n\tat play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)\r\n\tat play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:190)\r\n\tat play.utils.Threads$.withContextClassLoader(Threads.scala:22)\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:182)\r\n\t... 23 common frames omitted\r\n"}
{"@timestamp":"2020-05-27T13:20:42.646+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"\n\n! @7g0neka5n - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.UnexpectedException: Unexpected exception[CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for solvers.chess.ChessAsyncSolver was bound.\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  at play.api.inject.RoutesProvider$.bindingsFromConfiguration(BuiltinModule.scala:137):\nBinding(class router.Routes to self) (via modules: com.google.inject.util.Modules$OverrideModule -> play.api.inject.guice.GuiceableModuleConversions$$anon$4)\r\n\r\n1 error]\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:211)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:142)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.google.inject.CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for solvers.chess.ChessAsyncSolver was bound.\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  at play.api.inject.RoutesProvider$.bindingsFromConfiguration(BuiltinModule.scala:137):\nBinding(class router.Routes to self) (via modules: com.google.inject.util.Modules$OverrideModule -> play.api.inject.guice.GuiceableModuleConversions$$anon$4)\r\n\r\n1 error\r\n\tat com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:554)\r\n\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:161)\r\n\tat com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:108)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:87)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:78)\r\n\tat play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:200)\r\n\tat play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:155)\r\n\tat play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)\r\n\tat play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:190)\r\n\tat play.utils.Threads$.withContextClassLoader(Threads.scala:22)\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:182)\r\n\t... 23 common frames omitted\r\n"}
{"@timestamp":"2020-05-27T13:28:48.729+02:00","level":"ERROR","logger_name":"play.api.http.DefaultHttpErrorHandler","thread_name":"play-dev-mode-akka.actor.default-dispatcher-7","message":"\n\n! @7g0nfm10j - Internal server error, for (POST) [/v1/games/chess] ->\n ","stack_trace":"play.api.UnexpectedException: Unexpected exception[CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for play.api.libs.concurrent.CustomExecutionContext was bound.\r\n  while locating play.api.libs.concurrent.CustomExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolver.<init>(AsyncSolver.scala:19)\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  at play.api.inject.RoutesProvider$.bindingsFromConfiguration(BuiltinModule.scala:137):\nBinding(class router.Routes to self) (via modules: com.google.inject.util.Modules$OverrideModule -> play.api.inject.guice.GuiceableModuleConversions$$anon$4)\r\n\r\n1 error]\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:211)\r\n\tat play.core.server.DevServerStart$$anon$1.get(DevServerStart.scala:142)\r\n\tat play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:301)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:191)\r\n\tat akka.stream.impl.fusing.MapAsync$$anon$30.onPush(Ops.scala:1285)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:541)\r\n\tat akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:423)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:625)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:502)\r\n\tat akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:600)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:769)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:784)\r\n\tat akka.actor.Actor.aroundReceive(Actor.scala:535)\r\n\tat akka.actor.Actor.aroundReceive$(Actor.scala:533)\r\n\tat akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:691)\r\n\tat akka.actor.ActorCell.receiveMessage(ActorCell.scala:575)\r\n\tat akka.actor.ActorCell.invoke(ActorCell.scala:545)\r\n\tat akka.dispatch.Mailbox.processMailbox(Mailbox.scala:270)\r\n\tat akka.dispatch.Mailbox.run(Mailbox.scala:231)\r\n\tat akka.dispatch.Mailbox.exec(Mailbox.scala:243)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.google.inject.CreationException: Unable to create injector, see the following errors:\r\n\r\n1) No implementation for play.api.libs.concurrent.CustomExecutionContext was bound.\r\n  while locating play.api.libs.concurrent.CustomExecutionContext\r\n    for the 1st parameter of solvers.chess.ChessAsyncSolver.<init>(AsyncSolver.scala:19)\r\n  while locating solvers.chess.ChessAsyncSolver\r\n    for the 2nd parameter of controllers.ChessPostController.<init>(ChessPostController.scala:18)\r\n  while locating controllers.ChessPostController\r\n    for the 3rd parameter of router.Routes.<init>(Routes.scala:29)\r\n  at play.api.inject.RoutesProvider$.bindingsFromConfiguration(BuiltinModule.scala:137):\nBinding(class router.Routes to self) (via modules: com.google.inject.util.Modules$OverrideModule -> play.api.inject.guice.GuiceableModuleConversions$$anon$4)\r\n\r\n1 error\r\n\tat com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:554)\r\n\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:161)\r\n\tat com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:108)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:87)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:78)\r\n\tat play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:200)\r\n\tat play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:155)\r\n\tat play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)\r\n\tat play.core.server.DevServerStart$$anon$1.$anonfun$reload$3(DevServerStart.scala:190)\r\n\tat play.utils.Threads$.withContextClassLoader(Threads.scala:22)\r\n\tat play.core.server.DevServerStart$$anon$1.reload(DevServerStart.scala:182)\r\n\t... 23 common frames omitted\r\n"}
{"@timestamp":"2020-05-27T13:33:12.093+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-17","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-27T13:33:12.100+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-17","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-27T16:05:14.335+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-9","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-27T16:05:14.347+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-9","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:17:26.896+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-10","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T15:17:26.913+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-10","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:17:27.141+02:00","level":"WARN","logger_name":"play.filters.hosts.AllowedHostsFilter","thread_name":"application-akka.actor.default-dispatcher-6","message":"Host not allowed: localhost:4200"}
{"@timestamp":"2020-05-28T15:17:27.157+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-6","message":"onClientError: statusCode = 400, uri = /v1/games/chess, message = Host not allowed: localhost:4200"}
{"@timestamp":"2020-05-28T15:21:39.195+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-8","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T15:21:39.206+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-8","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:30:30.874+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-12","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T15:30:30.950+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-12","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T15:30:31.228+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-12","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T15:30:31.237+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-12","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:34:43.791+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T15:34:43.876+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T15:34:44.195+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T15:34:44.205+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:34:44.646+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T15:36:50.371+02:00","level":"DEBUG","logger_name":"play.api.libs.Files$DefaultTemporaryFileCreator","thread_name":"application-akka.actor.internal-dispatcher-7","message":"deletePath: deleting = C:\\Temp\\playtemp5150226732311718676"}
{"@timestamp":"2020-05-28T15:36:50.944+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-15","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T15:36:50.958+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-15","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T15:36:51.145+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-15","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T15:36:51.150+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-15","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:36:51.161+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T15:36:51.165+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsError"}
{"@timestamp":"2020-05-28T15:37:41.284+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-7","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T15:37:41.285+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-7","message":"JsError"}
{"@timestamp":"2020-05-28T15:38:49.356+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T15:38:49.444+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T15:38:49.611+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T15:38:49.619+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:38:50.042+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T15:38:50.190+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsError"}
{"@timestamp":"2020-05-28T15:38:56.446+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T15:38:56.446+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsError"}
{"@timestamp":"2020-05-28T15:39:01.000+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T15:39:01.001+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsError"}
{"@timestamp":"2020-05-28T15:41:05.623+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T15:41:05.709+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T15:41:05.940+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T15:41:05.955+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T15:41:06.298+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T15:41:06.311+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"checked\":false,\"npieces\":1},{\"label\":\"♕\",\"checked\":false,\"npieces\":2},{\"label\":\"♖\",\"checked\":false,\"npieces\":3},{\"label\":\"♗\",\"checked\":false,\"npieces\":4},{\"label\":\"♘\",\"checked\":false,\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T15:41:06.466+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsError"}
{"@timestamp":"2020-05-28T16:04:18.146+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T16:04:18.233+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T16:04:18.537+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T16:04:18.552+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T16:04:18.809+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:04:18.818+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:04:18.957+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@728a3645)"}
{"@timestamp":"2020-05-28T16:04:36.851+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:04:36.852+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:04:36.854+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@285e4f43)"}
{"@timestamp":"2020-05-28T16:04:58.109+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:04:58.110+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:04:58.111+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@3f0e738a)"}
{"@timestamp":"2020-05-28T16:05:01.047+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:05:01.047+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:05:01.048+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@7e3379b1)"}
{"@timestamp":"2020-05-28T16:05:09.513+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:05:09.514+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:05:09.515+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@4f0743e5)"}
{"@timestamp":"2020-05-28T16:05:21.969+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:05:21.970+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:05:21.971+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@1e1c86fe)"}
{"@timestamp":"2020-05-28T16:05:23.734+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:05:23.735+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:05:23.736+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@27756e8d)"}
{"@timestamp":"2020-05-28T16:05:26.928+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:05:26.929+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:05:26.931+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@1a527c43)"}
{"@timestamp":"2020-05-28T16:35:10.285+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T16:35:10.398+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T16:35:10.757+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T16:35:10.767+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T16:35:11.213+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:35:11.225+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:35:11.427+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@87f22cc)"}
{"@timestamp":"2020-05-28T16:44:19.339+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T16:44:19.463+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T16:44:19.748+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T16:44:19.761+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T16:44:20.275+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T16:44:20.289+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":1},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":2},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":3},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":4},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":5}]}"}
{"@timestamp":"2020-05-28T16:44:20.483+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@766ea091)"}
{"@timestamp":"2020-05-28T16:44:20.692+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-7","message":"Success onComplete"}
{"@timestamp":"2020-05-28T17:22:34.190+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:22:34.192+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":4},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":0},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:22:34.195+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@23113a16)"}
{"@timestamp":"2020-05-28T17:22:34.231+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-9","message":"Success onComplete"}
{"@timestamp":"2020-05-28T17:22:40.952+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:22:40.953+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":3},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":0},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:22:40.954+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@622c302d)"}
{"@timestamp":"2020-05-28T17:22:40.988+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-10","message":"Success onComplete"}
{"@timestamp":"2020-05-28T17:23:44.871+02:00","level":"DEBUG","logger_name":"play.api.libs.Files$DefaultTemporaryFileCreator","thread_name":"application-akka.actor.internal-dispatcher-11","message":"deletePath: deleting = C:\\Temp\\playtemp9130341243890066825"}
{"@timestamp":"2020-05-28T17:23:45.452+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T17:23:45.464+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T17:23:45.626+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T17:23:45.629+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-21","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T17:23:45.640+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:23:45.641+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":3},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":0},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:23:45.659+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@6c4894f)"}
{"@timestamp":"2020-05-28T17:23:45.719+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-7","message":"Success onComplete List(List(((1,0),K), ((1,2),K), ((3,1),K)), List(((0,0),K), ((0,2),K), ((3,2),K)), List(((0,0),K), ((0,3),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((3,0),K)), List(((0,1),K), ((2,1),K), ((3,3),K)), List(((0,3),K), ((2,0),K), ((2,3),K)), List(((0,3),K), ((3,0),K), ((3,3),K)), List(((1,1),K), ((1,3),K), ((3,3),K)), List(((1,0),K), ((3,0),K), ((3,3),K)), List(((0,3),K), ((1,1),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((3,3),K)), List(((0,1),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((2,2),K), ((3,0),K)), List(((1,2),K), ((2,0),K), ((3,2),K)), List(((0,0),K), ((0,3),K), ((2,0),K)), List(((0,1),K), ((0,3),K), ((2,0),K)), List(((1,1),K), ((2,3),K), ((3,0),K)), List(((0,0),K), ((2,2),K), ((3,0),K)), List(((0,3),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((3,0),K), ((3,3),K)), List(((0,3),K), ((2,1),K), ((2,3),K)), List(((0,0),K), ((1,3),K), ((2,0),K)), List(((1,1),K), ((1,3),K), ((3,1),K)), List(((1,1),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((3,1),K)), List(((1,0),K), ((1,2),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((3,3),K)), List(((0,0),K), ((2,0),K), ((3,2),K)), List(((0,3),K), ((1,0),K), ((2,2),K)), List(((0,2),K), ((2,1),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((2,2),K)), List(((0,0),K), ((1,2),K), ((2,0),K)), List(((1,0),K), ((1,3),K), ((3,1),K)), List(((0,0),K), ((1,3),K), ((3,0),K)), List(((0,0),K), ((0,3),K), ((2,1),K)), List(((0,0),K), ((1,2),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((3,0),K)), List(((0,2),K), ((3,0),K), ((3,2),K)), List(((1,2),K), ((2,0),K), ((3,3),K)), List(((1,0),K), ((1,3),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((2,1),K)), List(((0,2),K), ((2,0),K), ((3,2),K)), List(((0,1),K), ((1,3),K), ((3,0),K)), List(((0,0),K), ((2,3),K), ((3,1),K)), List(((1,3),K), ((2,0),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((3,0),K)), List(((0,0),K), ((2,1),K), ((2,3),K)), List(((0,1),K), ((2,0),K), ((3,2),K)), List(((1,0),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,2),K), ((2,0),K)), List(((0,1),K), ((2,0),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((3,1),K)), List(((0,3),K), ((1,1),K), ((2,3),K)), List(((0,1),K), ((2,1),K), ((2,3),K)), List(((0,0),K), ((0,2),K), ((3,1),K)), List(((0,0),K), ((2,0),K), ((2,3),K)), List(((0,3),K), ((1,1),K), ((3,0),K)), List(((0,0),K), ((0,2),K), ((2,2),K)), List(((0,3),K), ((2,0),K), ((3,2),K)), List(((1,1),K), ((3,0),K), ((3,2),K)), List(((1,2),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,3),K)), List(((1,3),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((3,0),K)), List(((0,0),K), ((2,3),K), ((3,0),K)), List(((0,2),K), ((2,0),K), ((3,3),K)), List(((1,0),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((3,0),K), ((3,2),K)), List(((1,3),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((2,1),K)), List(((0,1),K), ((3,1),K), ((3,3),K)), List(((1,3),K), ((2,1),K), ((3,3),K)), List(((0,1),K), ((2,0),K), ((2,2),K)), List(((0,3),K), ((1,0),K), ((2,3),K)), List(((0,1),K), ((0,3),K), ((2,1),K)), List(((1,0),K), ((1,2),K), ((3,2),K)), List(((0,3),K), ((2,0),K), ((2,2),K)), List(((0,2),K), ((1,0),K), ((3,3),K)), List(((0,1),K), ((3,0),K), ((3,3),K)), List(((1,0),K), ((3,0),K), ((3,2),K)), List(((0,3),K), ((2,0),K), ((3,3),K)), List(((0,2),K), ((2,1),K), ((2,3),K)), List(((1,0),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((2,1),K)), List(((0,0),K), ((1,3),K), ((3,1),K)), List(((0,3),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((2,3),K), ((3,0),K)), List(((0,1),K), ((0,3),K), ((3,3),K)), List(((1,1),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((2,3),K)), List(((0,2),K), ((3,0),K), ((3,3),K)), List(((0,3),K), ((1,1),K), ((3,3),K)), List(((0,2),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((2,2),K), ((3,0),K)), List(((0,3),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((1,2),K), ((3,2),K)), List(((1,1),K), ((1,3),K), ((3,2),K)), List(((0,3),K), ((1,0),K), ((3,3),K)), List(((0,3),K), ((2,1),K), ((3,3),K)), List(((0,0),K), ((2,1),K), ((3,3),K)), List(((0,1),K), ((2,0),K), ((2,3),K)), List(((0,0),K), ((2,0),K), ((2,2),K)), List(((0,0),K), ((0,3),K), ((2,2),K)), List(((0,0),K), ((1,2),K), ((3,0),K)), List(((0,0),K), ((1,2),K), ((3,1),K)), List(((0,3),K), ((1,0),K), ((3,0),K)), List(((0,3),K), ((2,3),K), ((3,0),K)), List(((1,0),K), ((1,3),K), ((3,0),K)), List(((0,1),K), ((2,3),K), ((3,0),K)), List(((1,2),K), ((3,0),K), ((3,3),K)), List(((0,2),K), ((2,3),K), ((3,0),K)), List(((1,3),K), ((2,0),K), ((3,2),K)), List(((0,2),K), ((2,0),K), ((2,2),K)), List(((0,3),K), ((1,1),K), ((3,1),K)), List(((0,2),K), ((2,3),K), ((3,1),K)), List(((0,1),K), ((0,3),K), ((3,2),K)), List(((0,2),K), ((2,0),K), ((2,3),K)), List(((1,2),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((3,1),K)), List(((0,1),K), ((1,3),K), ((3,1),K)), List(((1,1),K), ((3,0),K), ((3,3),K)), List(((0,3),K), ((1,0),K), ((3,2),K)), List(((0,0),K), ((2,0),K), ((3,3),K)), List(((0,3),K), ((2,2),K), ((3,0),K)), List(((1,3),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((1,2),K), ((3,0),K)), List(((0,1),K), ((0,3),K), ((2,3),K)), List(((0,1),K), ((1,3),K), ((3,2),K)), List(((1,1),K), ((1,3),K), ((3,0),K)), List(((0,0),K), ((0,2),K), ((2,3),K)), List(((0,3),K), ((1,0),K), ((3,1),K)), List(((0,2),K), ((1,0),K), ((2,2),K)), List(((1,0),K), ((1,3),K), ((3,2),K)), List(((0,1),K), ((1,3),K), ((2,0),K)))"}
{"@timestamp":"2020-05-28T17:24:08.424+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:24:08.424+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"4x4\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":4},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":0},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:24:08.425+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(4x4,[Lcontrollers.PieceInput;@a15b0f8)"}
{"@timestamp":"2020-05-28T17:24:08.453+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-9","message":"Success onComplete List(List(((0,0),K), ((0,3),K), ((2,1),K), ((2,3),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((3,2),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((3,3),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((3,0),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((2,2),K)), List(((0,1),K), ((0,3),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((3,0),K)), List(((0,0),K), ((0,3),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((3,3),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((2,2),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((3,0),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((3,3),K)), List(((0,3),K), ((1,1),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((2,3),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((3,3),K)), List(((0,3),K), ((1,0),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((3,3),K)), List(((0,0),K), ((1,2),K), ((3,1),K), ((3,3),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((1,2),K), ((3,1),K), ((3,3),K)), List(((1,1),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((2,3),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((2,2),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((3,0),K)), List(((1,0),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((3,3),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((3,2),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((3,1),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((3,2),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((3,0),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((2,3),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((3,3),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((3,0),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((3,2),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((3,2),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((3,0),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((2,3),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((3,0),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((3,2),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((3,0),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((2,3),K)))"}
{"@timestamp":"2020-05-28T17:24:19.282+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:24:19.283+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"5x5\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":4},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":0},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:24:19.284+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(5x5,[Lcontrollers.PieceInput;@4b28bac3)"}
{"@timestamp":"2020-05-28T17:24:19.374+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-10","message":"Success onComplete List(List(((0,4),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((4,0),K), ((4,3),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((4,2),K)), List(((0,1),K), ((1,3),K), ((3,4),K), ((4,1),K)), List(((0,4),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((2,2),K), ((2,4),K), ((4,2),K)), List(((1,1),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,1),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((2,0),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((3,1),K), ((3,4),K)), List(((0,3),K), ((1,0),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((2,3),K), ((3,1),K)), List(((0,1),K), ((2,2),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((3,0),K), ((3,2),K)), List(((0,2),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((1,1),K), ((1,3),K), ((3,1),K), ((3,4),K)), List(((0,3),K), ((2,1),K), ((2,4),K), ((4,4),K)), List(((1,3),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((2,2),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((3,0),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((4,4),K)), List(((1,1),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((2,2),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,3),K), ((4,2),K)), List(((0,2),K), ((1,4),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((2,2),K), ((3,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((3,0),K), ((3,4),K)), List(((0,4),K), ((2,2),K), ((2,4),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((1,0),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((2,1),K), ((2,3),K), ((4,2),K)), List(((0,4),K), ((1,1),K), ((2,3),K), ((4,2),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((4,1),K)), List(((0,4),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((0,2),K), ((2,3),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((3,1),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((4,4),K)), List(((1,1),K), ((1,3),K), ((3,2),K), ((4,0),K)), List(((1,2),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((3,1),K)), List(((0,3),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((0,1),K), ((2,2),K), ((3,0),K), ((4,4),K)), List(((0,2),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((4,0),K), ((4,3),K)), List(((2,0),K), ((2,2),K), ((2,4),K), ((4,0),K)), List(((1,2),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((4,1),K), ((4,3),K)), List(((1,1),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((2,2),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((4,4),K)), List(((0,2),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((1,4),K), ((2,1),K), ((3,4),K), ((4,2),K)), List(((2,0),K), ((2,2),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((3,2),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((4,0),K)), List(((0,3),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((1,4),K), ((2,1),K), ((4,2),K)), List(((1,1),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((2,1),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((3,3),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((4,2),K)), List(((1,1),K), ((1,3),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((2,4),K)), List(((0,0),K), ((1,4),K), ((3,1),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((2,3),K)), List(((0,4),K), ((2,2),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((2,3),K), ((3,1),K), ((4,4),K)), List(((0,2),K), ((2,1),K), ((2,4),K), ((4,0),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((3,2),K)), List(((0,4),K), ((1,2),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,2),K), ((4,0),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((3,4),K)), List(((0,2),K), ((0,4),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((4,2),K)), List(((0,4),K), ((1,1),K), ((3,0),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((3,3),K), ((4,0),K)), List(((0,3),K), ((1,1),K), ((3,2),K), ((3,4),K)), List(((0,2),K), ((2,1),K), ((2,4),K), ((4,4),K)), List(((0,3),K), ((2,3),K), ((3,1),K), ((4,3),K)), List(((0,4),K), ((1,1),K), ((3,1),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((3,4),K), ((4,0),K)), List(((2,1),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((3,1),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((4,3),K)), List(((0,4),K), ((1,1),K), ((3,0),K), ((4,3),K)), List(((0,4),K), ((2,0),K), ((2,4),K), ((3,2),K)), List(((0,4),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((1,4),K), ((3,0),K), ((3,2),K)), List(((1,2),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((1,1),K), ((2,3),K), ((3,1),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((2,3),K), ((3,0),K), ((4,2),K)), List(((0,3),K), ((2,1),K), ((2,4),K), ((4,3),K)), List(((0,2),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,2),K), ((3,3),K), ((4,0),K)), List(((1,2),K), ((1,4),K), ((3,2),K), ((4,4),K)), List(((1,2),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((4,3),K)), List(((0,1),K), ((2,0),K), ((2,4),K), ((4,2),K)), List(((0,2),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((1,4),K), ((2,2),K), ((4,2),K)), List(((0,3),K), ((2,0),K), ((2,3),K), ((4,1),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((4,2),K)), List(((0,0),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,2),K), ((0,4),K), ((3,1),K), ((3,3),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((2,4),K)), List(((0,3),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((4,1),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((3,0),K)), List(((0,2),K), ((0,4),K), ((2,3),K), ((3,0),K)), List(((0,2),K), ((0,4),K), ((3,3),K), ((4,1),K)), List(((1,2),K), ((1,4),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((3,2),K), ((4,0),K)), List(((0,4),K), ((2,1),K), ((4,1),K), ((4,3),K)), List(((1,0),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((4,4),K)), List(((1,2),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((4,1),K)), List(((0,4),K), ((1,0),K), ((2,3),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((4,1),K)), List(((0,1),K), ((0,4),K), ((4,1),K), ((4,4),K)), List(((0,2),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((4,2),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((3,3),K)), List(((0,2),K), ((0,4),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((4,3),K)), List(((1,4),K), ((2,1),K), ((3,3),K), ((4,0),K)), List(((0,1),K), ((2,1),K), ((2,3),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((3,1),K)), List(((0,3),K), ((2,1),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((2,2),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((3,1),K), ((3,3),K)), List(((1,4),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((2,1),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((4,1),K)), List(((0,2),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((2,3),K), ((4,4),K)), List(((1,3),K), ((2,1),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((2,2),K)), List(((0,2),K), ((1,0),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,1),K), ((4,3),K)), List(((1,2),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((3,0),K), ((3,3),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((3,3),K)), List(((1,1),K), ((1,4),K), ((3,2),K), ((4,0),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((4,0),K)), List(((0,1),K), ((1,4),K), ((2,1),K), ((4,4),K)), List(((1,3),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((4,2),K)), List(((0,1),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,3),K), ((3,0),K)), List(((0,4),K), ((2,0),K), ((2,2),K), ((4,1),K)), List(((0,2),K), ((1,4),K), ((3,0),K), ((4,4),K)), List(((1,4),K), ((2,2),K), ((3,0),K), ((4,2),K)), List(((1,1),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((2,4),K)), List(((0,1),K), ((0,3),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((3,1),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((4,4),K)), List(((1,4),K), ((2,0),K), ((2,2),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((3,4),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((4,0),K)), List(((0,1),K), ((2,0),K), ((2,4),K), ((4,0),K)), List(((0,0),K), ((2,3),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((3,2),K), ((3,4),K)), List(((0,2),K), ((1,0),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((4,1),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((4,4),K)), List(((1,0),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((1,2),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((1,3),K), ((3,4),K), ((4,0),K)), List(((1,0),K), ((2,2),K), ((2,4),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((3,0),K)), List(((0,0),K), ((0,4),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((1,0),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,3),K), ((4,1),K)), List(((1,4),K), ((2,1),K), ((4,0),K), ((4,4),K)), List(((1,0),K), ((1,4),K), ((3,2),K), ((3,4),K)), List(((0,4),K), ((1,1),K), ((3,4),K), ((4,2),K)), List(((1,2),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((1,3),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((0,2),K), ((2,3),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((3,1),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((3,2),K)), List(((0,0),K), ((2,3),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((4,3),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((4,1),K)), List(((0,3),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((2,4),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((4,4),K)), List(((1,0),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((3,1),K), ((4,3),K)), List(((0,3),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((2,3),K)), List(((0,1),K), ((2,2),K), ((2,4),K), ((4,1),K)), List(((0,4),K), ((2,1),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((3,1),K), ((3,4),K)), List(((0,2),K), ((2,0),K), ((2,3),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((3,0),K), ((3,4),K)), List(((1,4),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((2,4),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((4,1),K)), List(((0,0),K), ((0,2),K), ((4,0),K), ((4,4),K)), List(((1,0),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((0,4),K), ((1,2),K), ((3,0),K), ((3,2),K)), List(((0,2),K), ((0,4),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((2,2),K), ((4,0),K)), List(((0,1),K), ((0,3),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((4,0),K)), List(((0,3),K), ((1,0),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((2,1),K), ((4,1),K)), List(((1,1),K), ((2,3),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((3,2),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((1,4),K), ((2,2),K), ((4,0),K)), List(((0,3),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((4,0),K)), List(((0,4),K), ((1,2),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((0,3),K), ((3,4),K), ((4,0),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((2,4),K)), List(((0,2),K), ((2,0),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((3,1),K), ((3,3),K)), List(((0,4),K), ((1,0),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((1,4),K), ((2,1),K), ((4,0),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((4,4),K)), List(((0,3),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((2,2),K), ((2,4),K), ((4,1),K)), List(((0,4),K), ((1,1),K), ((3,3),K), ((4,1),K)), List(((0,0),K), ((1,4),K), ((2,1),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((3,0),K), ((4,4),K)), List(((0,1),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((1,3),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((2,0),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((1,2),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((3,0),K)), List(((0,2),K), ((2,1),K), ((2,4),K), ((4,3),K)), List(((1,2),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((2,2),K), ((2,4),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((3,1),K), ((4,3),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((4,3),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((4,4),K)), List(((1,0),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((1,4),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((4,1),K)), List(((1,0),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((2,0),K), ((2,3),K), ((4,3),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((3,0),K)), List(((0,2),K), ((2,0),K), ((2,2),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((4,1),K)), List(((0,4),K), ((2,2),K), ((2,4),K), ((3,0),K)), List(((0,0),K), ((1,4),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((2,2),K), ((2,4),K), ((4,0),K)), List(((0,0),K), ((2,1),K), ((2,3),K), ((4,1),K)), List(((1,4),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((1,3),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((2,1),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((2,3),K), ((4,0),K)), List(((0,1),K), ((1,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((2,1),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((1,3),K), ((3,1),K), ((3,4),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((4,1),K)), List(((1,0),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((0,3),K), ((1,1),K), ((3,1),K), ((4,4),K)), List(((0,3),K), ((2,2),K), ((2,4),K), ((4,2),K)), List(((0,4),K), ((2,3),K), ((3,1),K), ((4,3),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((4,3),K)), List(((1,3),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((1,2),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((4,4),K)), List(((2,0),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((1,1),K), ((1,4),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((3,0),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((3,1),K), ((3,3),K)), List(((0,3),K), ((1,1),K), ((3,3),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((3,0),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((1,3),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((2,0),K), ((2,4),K), ((4,1),K)), List(((1,2),K), ((2,0),K), ((2,4),K), ((4,1),K)), List(((0,4),K), ((1,1),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((4,0),K)), List(((2,0),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((4,1),K)), List(((0,1),K), ((0,3),K), ((3,2),K), ((4,0),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((4,0),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((2,4),K)), List(((1,1),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((0,4),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((2,3),K)), List(((0,0),K), ((1,4),K), ((3,3),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((3,4),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((4,4),K)), List(((1,2),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((2,2),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((3,0),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((4,0),K)), List(((2,0),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((2,2),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((3,2),K)), List(((1,1),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((0,3),K), ((1,1),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((3,1),K), ((4,3),K)), List(((1,4),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((3,3),K)), List(((0,2),K), ((2,0),K), ((2,2),K), ((2,4),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((3,0),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((3,4),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((4,4),K)), List(((2,2),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((2,0),K), ((2,2),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((4,0),K)), List(((1,3),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((1,1),K), ((1,4),K), ((3,1),K), ((3,3),K)), List(((2,1),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((1,1),K), ((1,3),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((2,1),K), ((2,3),K), ((4,2),K)), List(((0,2),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((2,1),K), ((2,3),K), ((4,2),K)), List(((1,2),K), ((1,4),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((2,2),K)), List(((1,0),K), ((1,4),K), ((4,0),K), ((4,3),K)), List(((1,1),K), ((1,4),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((0,4),K), ((2,3),K), ((4,1),K)), List(((1,1),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((3,0),K), ((4,2),K)), List(((0,2),K), ((2,1),K), ((2,3),K), ((4,1),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((4,1),K)), List(((0,1),K), ((0,4),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((4,2),K), ((4,4),K)), List(((1,0),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((2,2),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((2,2),K), ((2,4),K)), List(((0,3),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((2,3),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((3,2),K)), List(((2,0),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((3,3),K), ((4,1),K)), List(((0,3),K), ((2,0),K), ((2,2),K), ((4,0),K)), List(((0,4),K), ((2,2),K), ((3,0),K), ((4,4),K)), List(((1,2),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((3,1),K), ((3,4),K)), List(((0,3),K), ((2,1),K), ((2,4),K), ((4,1),K)), List(((0,0),K), ((2,2),K), ((3,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((4,2),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((4,3),K)), List(((1,2),K), ((1,4),K), ((3,3),K), ((4,0),K)), List(((1,0),K), ((1,4),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,3),K), ((3,0),K)), List(((0,2),K), ((1,4),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((0,4),K), ((2,3),K), ((4,0),K)), List(((1,0),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((4,2),K)), List(((0,4),K), ((1,1),K), ((2,3),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((3,4),K)), List(((1,0),K), ((2,2),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((3,4),K)), List(((0,0),K), ((2,3),K), ((3,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((4,0),K)), List(((0,3),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((1,2),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((3,4),K), ((4,1),K)), List(((0,4),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((0,3),K), ((1,1),K), ((3,4),K), ((4,0),K)), List(((0,3),K), ((2,1),K), ((2,3),K), ((4,1),K)), List(((0,1),K), ((0,4),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((2,1),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((3,3),K), ((4,1),K)), List(((0,4),K), ((1,2),K), ((3,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((3,0),K)), List(((2,1),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((2,3),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((2,1),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((4,0),K)), List(((0,4),K), ((1,1),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((3,4),K)), List(((0,3),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((4,0),K)), List(((1,2),K), ((1,4),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((2,3),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((2,3),K)), List(((0,1),K), ((0,3),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((2,0),K), ((2,4),K), ((4,1),K)), List(((0,0),K), ((1,4),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((1,4),K), ((3,4),K), ((4,1),K)), List(((1,3),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((2,2),K)), List(((0,1),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((4,0),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((4,2),K)), List(((0,2),K), ((2,0),K), ((2,2),K), ((4,2),K)), List(((1,2),K), ((1,4),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((3,3),K)), List(((0,1),K), ((0,4),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((3,1),K)), List(((0,4),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((1,2),K), ((1,4),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((2,1),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((3,2),K), ((3,4),K)), List(((1,1),K), ((1,3),K), ((3,2),K), ((3,4),K)), List(((0,1),K), ((2,0),K), ((2,2),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((3,3),K), ((4,0),K)), List(((1,2),K), ((1,4),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,3),K), ((4,0),K)), List(((0,2),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,4),K), ((2,2),K), ((2,4),K), ((4,0),K)), List(((1,4),K), ((2,2),K), ((3,0),K), ((4,4),K)), List(((1,4),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((4,1),K)), List(((0,0),K), ((2,1),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((1,1),K), ((1,3),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((0,4),K), ((1,1),K), ((3,2),K), ((4,4),K)), List(((1,0),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((3,2),K), ((4,4),K)), List(((0,3),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((3,0),K)), List(((1,1),K), ((1,4),K), ((3,1),K), ((3,4),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((3,4),K)), List(((0,2),K), ((2,3),K), ((3,0),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((3,4),K)), List(((1,4),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((2,2),K)), List(((0,4),K), ((1,1),K), ((3,3),K), ((4,0),K)), List(((1,2),K), ((1,4),K), ((4,1),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((3,2),K)), List(((0,3),K), ((1,1),K), ((3,1),K), ((3,4),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((3,1),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((3,2),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((3,2),K)), List(((0,0),K), ((2,1),K), ((3,4),K), ((4,2),K)), List(((1,4),K), ((2,1),K), ((3,3),K), ((4,1),K)), List(((1,0),K), ((1,4),K), ((3,4),K), ((4,1),K)), List(((0,1),K), ((0,4),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((3,1),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((1,3),K), ((3,3),K), ((4,0),K)), List(((1,2),K), ((1,4),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((1,3),K), ((2,1),K), ((4,1),K), ((4,3),K)), List(((2,2),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((2,2),K), ((2,4),K), ((4,2),K)), List(((0,3),K), ((2,2),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((1,2),K), ((4,0),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((3,4),K), ((4,1),K)), List(((1,1),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((2,1),K), ((4,1),K)), List(((1,0),K), ((1,4),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((4,0),K)), List(((0,1),K), ((2,1),K), ((2,4),K), ((4,1),K)), List(((1,3),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((4,2),K)), List(((0,3),K), ((1,0),K), ((3,1),K), ((3,4),K)), List(((0,2),K), ((2,0),K), ((2,2),K), ((4,1),K)), List(((1,4),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((4,0),K)), List(((0,2),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((2,0),K)), List(((0,2),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((0,3),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((4,3),K)), List(((0,4),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((2,3),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((3,1),K), ((4,4),K)), List(((1,2),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((2,2),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((3,1),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((3,1),K), ((3,4),K)), List(((0,2),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((3,2),K), ((3,4),K)), List(((1,0),K), ((1,2),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((4,1),K)), List(((0,2),K), ((1,0),K), ((3,3),K), ((4,0),K)), List(((0,1),K), ((2,1),K), ((2,4),K), ((4,4),K)), List(((2,1),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((1,3),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((3,0),K), ((3,3),K)), List(((2,0),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((3,3),K), ((4,1),K)), List(((1,1),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((3,0),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((3,1),K)), List(((0,2),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((3,4),K)), List(((0,1),K), ((2,0),K), ((2,2),K), ((4,4),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((4,0),K), ((4,4),K)), List(((1,4),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((0,4),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((2,3),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((2,2),K), ((4,4),K)), List(((0,0),K), ((2,3),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((3,3),K)), List(((1,0),K), ((1,3),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((2,1),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((2,2),K), ((3,0),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((3,0),K), ((3,3),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((2,2),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((3,2),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((3,4),K)), List(((0,2),K), ((2,2),K), ((2,4),K), ((3,0),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((3,3),K)), List(((1,0),K), ((1,2),K), ((3,3),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((3,3),K)), List(((0,1),K), ((1,3),K), ((3,1),K), ((3,4),K)), List(((1,0),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,4),K), ((2,1),K), ((2,3),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((3,2),K)), List(((0,4),K), ((2,1),K), ((2,4),K), ((4,0),K)), List(((0,4),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((0,1),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((2,3),K)), List(((0,0),K), ((0,4),K), ((2,3),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((2,2),K), ((2,4),K), ((3,0),K)), List(((0,0),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((2,4),K)), List(((0,3),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((1,4),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((4,0),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((1,4),K), ((2,2),K), ((3,0),K)), List(((0,1),K), ((0,4),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((3,1),K)), List(((0,1),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((4,4),K)), List(((0,3),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((1,4),K), ((2,1),K), ((3,3),K)), List(((0,3),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((4,3),K)), List(((1,2),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((2,3),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((4,4),K)), List(((1,0),K), ((1,3),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((1,4),K), ((2,2),K), ((4,3),K)), List(((2,2),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((4,2),K)), List(((0,2),K), ((1,4),K), ((2,1),K), ((4,2),K)), List(((0,3),K), ((2,3),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((1,4),K), ((3,3),K), ((4,1),K)), List(((0,4),K), ((1,0),K), ((3,0),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((2,4),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((3,4),K)), List(((1,1),K), ((2,3),K), ((3,0),K), ((4,2),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((4,1),K)), List(((0,2),K), ((1,4),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((3,1),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((4,2),K)), List(((2,0),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((3,3),K)), List(((0,4),K), ((2,1),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((2,0),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((3,2),K)), List(((2,0),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((1,0),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((2,0),K), ((2,3),K), ((4,4),K)), List(((1,0),K), ((1,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((4,3),K)), List(((1,0),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((4,2),K)), List(((0,4),K), ((2,0),K), ((2,4),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((2,4),K)), List(((0,4),K), ((1,0),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((3,2),K)), List(((1,2),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((2,3),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((3,3),K), ((4,1),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((4,3),K)), List(((0,1),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,3),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((3,1),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((3,3),K), ((4,1),K)), List(((0,2),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((3,3),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((4,0),K)), List(((0,4),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((4,2),K)), List(((0,4),K), ((2,1),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((1,3),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((3,3),K)), List(((1,3),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((4,0),K)), List(((0,4),K), ((1,0),K), ((3,1),K), ((3,4),K)), List(((1,2),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((3,1),K), ((3,4),K)), List(((0,2),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((3,4),K), ((4,1),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((4,4),K)), List(((1,0),K), ((1,4),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((2,1),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((2,4),K)), List(((0,2),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((1,4),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((3,0),K), ((3,3),K)), List(((1,1),K), ((1,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((2,0),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((3,1),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((3,3),K)), List(((0,4),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((1,4),K), ((3,3),K), ((4,0),K)), List(((0,4),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((1,3),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((2,4),K)), List(((0,0),K), ((1,2),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((1,3),K), ((4,0),K), ((4,3),K)), List(((0,4),K), ((2,1),K), ((3,3),K), ((4,1),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((4,3),K)), List(((2,3),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((1,4),K), ((4,1),K), ((4,4),K)), List(((1,1),K), ((1,3),K), ((3,3),K), ((4,0),K)), List(((1,0),K), ((1,2),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((0,4),K), ((2,3),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((2,3),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((3,2),K)), List(((1,0),K), ((1,4),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((3,0),K)), List(((1,3),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((2,3),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((3,2),K), ((3,4),K)), List(((0,2),K), ((1,4),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((2,0),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((2,3),K), ((4,0),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((3,2),K), ((3,4),K)), List(((1,0),K), ((1,4),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((1,3),K), ((3,3),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((3,1),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((3,3),K)), List(((1,1),K), ((1,3),K), ((3,4),K), ((4,2),K)), List(((0,4),K), ((1,2),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((2,2),K), ((3,0),K), ((4,3),K)), List(((0,4),K), ((2,0),K), ((2,2),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((3,4),K), ((4,0),K)), List(((1,1),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((2,2),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((2,1),K), ((2,4),K), ((4,2),K)), List(((1,3),K), ((2,1),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((2,1),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((3,3),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((3,4),K), ((4,0),K)), List(((1,1),K), ((1,3),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,2),K), ((3,1),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((4,3),K)), List(((0,0),K), ((1,3),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((4,0),K), ((4,4),K)), List(((1,0),K), ((2,2),K), ((2,4),K), ((4,1),K)), List(((0,3),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((4,1),K)), List(((0,0),K), ((0,2),K), ((4,2),K), ((4,4),K)), List(((1,1),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((0,4),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((3,1),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((4,0),K), ((4,3),K)), List(((1,1),K), ((2,3),K), ((3,1),K), ((4,3),K)), List(((0,4),K), ((2,0),K), ((2,2),K), ((4,0),K)), List(((0,0),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((4,3),K)), List(((0,0),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((0,4),K), ((2,0),K), ((2,2),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((3,2),K)), List(((1,2),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((3,4),K)), List(((2,2),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((1,4),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((4,0),K)), List(((2,0),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((1,4),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((0,1),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((2,2),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((3,2),K), ((3,4),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((2,3),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((3,3),K)), List(((1,4),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((4,0),K)), List(((0,2),K), ((2,0),K), ((2,4),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((4,2),K)), List(((1,2),K), ((2,0),K), ((2,4),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((3,1),K), ((4,3),K)), List(((0,2),K), ((2,2),K), ((2,4),K), ((4,4),K)), List(((2,0),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((1,4),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((4,1),K)), List(((0,0),K), ((2,1),K), ((2,3),K), ((4,2),K)), List(((0,4),K), ((2,1),K), ((4,0),K), ((4,4),K)), List(((2,2),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((2,2),K), ((3,4),K)), List(((0,4),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((2,1),K), ((2,3),K), ((4,3),K)), List(((0,4),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((1,0),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((2,0),K), ((2,3),K), ((4,0),K)), List(((2,0),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((1,4),K), ((2,1),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((2,3),K), ((3,0),K), ((4,4),K)), List(((0,3),K), ((2,1),K), ((3,4),K), ((4,2),K)), List(((1,3),K), ((2,1),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((1,0),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((3,4),K)), List(((2,4),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((2,2),K), ((2,4),K)), List(((0,0),K), ((1,3),K), ((3,3),K), ((4,1),K)), List(((0,3),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((1,2),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((3,1),K)), List(((1,4),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((1,4),K), ((2,1),K), ((4,1),K)), List(((0,3),K), ((1,1),K), ((3,2),K), ((4,4),K)), List(((1,0),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((2,2),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((3,3),K)), List(((0,1),K), ((1,4),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((4,2),K)), List(((0,3),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((3,0),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((3,2),K), ((3,4),K)), List(((1,1),K), ((1,4),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((1,3),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((1,1),K), ((1,4),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((1,4),K), ((2,1),K), ((4,0),K)), List(((0,1),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,3),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((3,3),K)), List(((0,4),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((2,1),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((2,3),K), ((4,1),K)), List(((0,2),K), ((1,0),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((4,1),K)), List(((0,2),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((3,4),K)), List(((0,0),K), ((1,4),K), ((2,2),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((4,2),K)), List(((0,4),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((3,0),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((2,3),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((3,0),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((2,2),K), ((2,4),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((3,1),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((3,3),K)), List(((0,2),K), ((1,4),K), ((3,1),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((3,2),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((4,1),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((3,4),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((4,1),K)), List(((1,0),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((2,3),K)), List(((1,3),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((2,4),K), ((4,0),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((2,2),K)), List(((0,3),K), ((1,1),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((2,1),K), ((2,3),K), ((4,4),K)), List(((1,1),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((2,0),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((4,1),K)), List(((1,2),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,4),K), ((2,3),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((1,1),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((1,3),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((3,2),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((3,3),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((4,3),K)), List(((0,3),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((1,1),K), ((1,4),K), ((3,3),K), ((4,1),K)), List(((0,1),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((3,4),K)), List(((0,4),K), ((1,0),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((2,0),K), ((2,4),K), ((4,0),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((4,2),K)), List(((1,0),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((2,0),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,3),K), ((4,1),K)), List(((0,4),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((1,1),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((4,2),K)), List(((0,1),K), ((2,1),K), ((2,3),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((3,4),K)), List(((1,0),K), ((1,2),K), ((3,4),K), ((4,1),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((4,1),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((4,1),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((3,0),K)), List(((0,2),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((0,3),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((3,0),K)), List(((0,0),K), ((1,3),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((1,3),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((2,0),K), ((2,4),K), ((4,1),K)), List(((0,1),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((1,2),K), ((3,4),K), ((4,2),K)), List(((0,2),K), ((2,2),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((4,1),K), ((4,3),K)), List(((1,0),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((1,4),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((1,4),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((4,0),K)), List(((0,4),K), ((1,1),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((1,2),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((4,2),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((4,2),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((4,2),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((3,4),K)), List(((0,1),K), ((2,2),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((3,0),K)), List(((0,4),K), ((1,0),K), ((2,3),K), ((4,3),K)), List(((0,3),K), ((2,2),K), ((2,4),K), ((4,0),K)), List(((1,1),K), ((1,3),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((3,1),K), ((3,4),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((2,4),K)), List(((0,2),K), ((2,2),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((4,4),K)), List(((1,1),K), ((1,4),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((4,0),K)), List(((0,4),K), ((1,1),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((1,4),K), ((2,2),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((1,4),K), ((2,1),K), ((3,4),K)), List(((0,0),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((0,3),K), ((1,0),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((2,2),K), ((2,4),K), ((3,0),K)), List(((0,1),K), ((1,4),K), ((3,1),K), ((3,4),K)), List(((2,3),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((3,3),K), ((4,1),K)), List(((1,1),K), ((1,3),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((2,2),K)), List(((1,1),K), ((2,3),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((0,2),K), ((2,0),K), ((2,4),K), ((3,2),K)), List(((0,0),K), ((1,2),K), ((3,4),K), ((4,0),K)), List(((1,4),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((4,4),K)), List(((1,1),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((3,2),K)), List(((1,2),K), ((1,4),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((1,0),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((0,3),K), ((3,2),K), ((3,4),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((3,4),K)), List(((0,4),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((1,4),K), ((2,0),K), ((2,2),K), ((3,4),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((4,1),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((4,0),K)), List(((0,2),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((2,2),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((3,4),K)), List(((1,4),K), ((2,1),K), ((4,2),K), ((4,4),K)), List(((1,3),K), ((2,1),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((3,2),K)), List(((0,0),K), ((2,0),K), ((2,2),K), ((3,4),K)), List(((1,0),K), ((1,3),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((3,1),K)), List(((0,3),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((1,2),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((2,2),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((3,3),K), ((4,0),K)), List(((1,4),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((4,1),K)), List(((0,1),K), ((2,0),K), ((2,3),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((4,0),K)), List(((0,3),K), ((2,2),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((2,1),K), ((4,3),K)), List(((0,3),K), ((2,1),K), ((3,3),K), ((4,0),K)), List(((0,2),K), ((2,0),K), ((2,3),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((3,2),K), ((4,0),K)), List(((2,0),K), ((2,2),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((2,1),K), ((4,1),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,3),K), ((4,3),K)), List(((0,0),K), ((2,1),K), ((3,3),K), ((4,1),K)), List(((1,0),K), ((2,2),K), ((2,4),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((1,4),K), ((3,4),K), ((4,1),K)), List(((0,2),K), ((1,0),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((2,1),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((0,2),K), ((4,0),K), ((4,3),K)), List(((1,3),K), ((2,1),K), ((4,0),K), ((4,3),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((3,0),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((3,4),K)), List(((0,0),K), ((2,0),K), ((2,4),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((4,0),K), ((4,2),K)), List(((0,3),K), ((1,1),K), ((4,0),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,3),K), ((4,4),K)), List(((0,4),K), ((2,1),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((1,4),K), ((4,2),K), ((4,4),K)), List(((1,4),K), ((2,0),K), ((2,2),K), ((4,1),K)), List(((0,3),K), ((2,3),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((2,2),K), ((2,4),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((3,0),K), ((4,2),K)), List(((0,4),K), ((2,1),K), ((2,3),K), ((4,2),K)), List(((0,3),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((4,0),K)), List(((0,2),K), ((2,0),K), ((2,3),K), ((4,1),K)), List(((2,0),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((4,1),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((4,0),K)), List(((0,3),K), ((2,0),K), ((2,3),K), ((4,2),K)), List(((0,4),K), ((2,1),K), ((2,4),K), ((4,4),K)), List(((0,0),K), ((2,1),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((3,1),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((4,4),K)), List(((1,4),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,3),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((0,2),K), ((1,0),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((1,2),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((2,4),K), ((4,2),K)), List(((2,0),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((2,0),K), ((2,2),K), ((4,1),K)), List(((0,0),K), ((2,3),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((4,0),K), ((4,3),K)), List(((0,3),K), ((2,3),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((3,0),K), ((4,2),K)), List(((1,3),K), ((2,1),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((2,1),K), ((4,1),K), ((4,4),K)), List(((1,1),K), ((1,4),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((3,0),K)), List(((0,4),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((1,2),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((2,1),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((3,2),K)), List(((1,0),K), ((1,4),K), ((3,1),K), ((3,3),K)), List(((0,2),K), ((1,4),K), ((3,0),K), ((3,2),K)), List(((0,2),K), ((1,0),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((3,4),K)), List(((0,4),K), ((2,2),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((3,1),K)), List(((0,3),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((4,4),K)), List(((0,3),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((2,0),K), ((2,4),K), ((4,3),K)), List(((1,0),K), ((1,3),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((1,4),K), ((2,2),K), ((4,1),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((3,3),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((4,2),K)), List(((1,1),K), ((1,4),K), ((3,0),K), ((3,3),K)), List(((1,1),K), ((1,4),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((2,4),K)), List(((2,0),K), ((2,2),K), ((2,4),K), ((4,1),K)), List(((0,4),K), ((1,0),K), ((3,0),K), ((4,4),K)), List(((1,0),K), ((1,2),K), ((3,2),K), ((4,4),K)), List(((1,1),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((2,1),K), ((2,4),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((2,2),K), ((4,4),K)), List(((1,1),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((2,3),K), ((3,0),K), ((4,2),K)), List(((1,2),K), ((1,4),K), ((3,0),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((3,2),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((3,3),K)), List(((0,2),K), ((2,1),K), ((3,4),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((4,1),K)), List(((1,3),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((4,1),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((2,1),K), ((3,4),K), ((4,1),K)), List(((1,4),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((4,4),K)), List(((2,0),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((3,0),K)), List(((1,3),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,3),K), ((3,1),K)), List(((0,2),K), ((2,1),K), ((3,3),K), ((4,0),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((3,3),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((3,4),K)), List(((0,0),K), ((2,0),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((3,4),K), ((4,0),K)), List(((2,1),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((4,0),K)), List(((0,3),K), ((2,1),K), ((3,3),K), ((4,1),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((3,4),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((2,2),K)), List(((0,1),K), ((0,4),K), ((2,3),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((4,4),K)), List(((1,2),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((1,1),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((0,3),K), ((1,1),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((4,0),K)), List(((0,4),K), ((1,1),K), ((2,3),K), ((4,0),K)), List(((0,2),K), ((1,0),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((0,3),K), ((2,2),K), ((2,4),K), ((4,1),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((4,2),K)), List(((1,2),K), ((1,4),K), ((3,4),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((3,2),K), ((3,4),K)), List(((1,2),K), ((2,0),K), ((2,4),K), ((3,2),K)), List(((0,0),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((3,4),K)), List(((0,1),K), ((2,1),K), ((3,3),K), ((4,1),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((3,0),K)), List(((1,0),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((2,1),K), ((3,4),K)), List(((1,3),K), ((2,1),K), ((3,3),K), ((4,1),K)), List(((2,1),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((2,2),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((4,1),K)), List(((0,0),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((2,3),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((2,1),K), ((2,4),K), ((4,3),K)), List(((1,2),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((4,0),K), ((4,3),K)), List(((2,4),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((3,1),K), ((3,3),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((4,1),K)), List(((1,1),K), ((1,3),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((2,1),K), ((3,3),K), ((4,1),K)), List(((0,2),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((3,1),K)), List(((0,0),K), ((0,3),K), ((3,3),K), ((4,1),K)), List(((1,3),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((3,0),K)), List(((0,0),K), ((1,2),K), ((3,1),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((4,2),K)), List(((0,1),K), ((2,3),K), ((3,1),K), ((4,3),K)), List(((0,2),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((2,4),K), ((3,2),K)), List(((0,0),K), ((0,3),K), ((3,0),K), ((3,2),K)), List(((1,0),K), ((1,4),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((4,3),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((2,1),K), ((2,3),K), ((4,1),K)), List(((0,0),K), ((1,3),K), ((4,1),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((2,4),K), ((3,0),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((4,1),K)), List(((1,3),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((2,1),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((2,0),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((1,0),K), ((1,4),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((4,1),K)), List(((0,3),K), ((2,1),K), ((2,3),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((2,4),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((4,1),K)), List(((0,1),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((4,2),K)), List(((0,4),K), ((1,2),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((3,4),K)), List(((0,4),K), ((1,0),K), ((3,2),K), ((4,4),K)), List(((1,0),K), ((1,3),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((3,1),K), ((4,3),K)), List(((0,3),K), ((2,0),K), ((2,2),K), ((4,4),K)), List(((0,2),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((0,3),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((0,3),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((3,3),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((4,3),K)), List(((0,1),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((2,0),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((2,3),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((4,3),K)), List(((2,0),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((4,0),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((2,3),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((3,4),K)), List(((0,1),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((3,4),K)), List(((0,1),K), ((2,1),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((2,0),K), ((2,3),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((4,4),K)), List(((1,2),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((4,4),K)), List(((1,0),K), ((1,4),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((1,4),K), ((2,2),K), ((3,0),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((4,1),K)), List(((0,2),K), ((2,1),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((2,0),K), ((2,3),K), ((4,1),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((1,4),K), ((2,1),K), ((3,4),K), ((4,0),K)), List(((1,1),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,3),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((1,2),K), ((1,4),K), ((3,2),K), ((3,4),K)), List(((0,4),K), ((1,0),K), ((3,4),K), ((4,2),K)), List(((1,2),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((1,4),K), ((2,1),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((2,0),K), ((2,2),K), ((4,3),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((3,3),K), ((4,0),K)), List(((0,1),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((1,4),K), ((4,3),K)), List(((0,0),K), ((2,0),K), ((2,2),K), ((2,4),K)), List(((0,0),K), ((2,1),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((3,3),K), ((4,1),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((2,2),K)), List(((1,0),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((2,1),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((4,1),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((3,3),K)), List(((0,1),K), ((2,1),K), ((2,4),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((3,2),K)), List(((0,3),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((3,1),K)), List(((1,2),K), ((1,4),K), ((2,0),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((2,2),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((4,2),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((3,1),K)), List(((0,1),K), ((0,4),K), ((3,2),K), ((4,4),K)), List(((0,3),K), ((2,2),K), ((3,0),K), ((4,4),K)), List(((0,2),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((3,2),K)), List(((0,1),K), ((2,1),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((3,3),K)), List(((2,1),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((3,4),K)), List(((1,4),K), ((2,0),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((4,0),K)), List(((0,3),K), ((2,0),K), ((2,4),K), ((4,0),K)), List(((0,0),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((1,0),K), ((1,2),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((3,3),K)), List(((1,0),K), ((1,3),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((2,1),K), ((2,3),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((3,0),K)), List(((0,3),K), ((2,1),K), ((4,0),K), ((4,2),K)), List(((0,3),K), ((2,0),K), ((2,4),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((3,4),K), ((4,0),K)), List(((1,1),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((2,4),K)), List(((0,3),K), ((2,1),K), ((2,4),K), ((4,0),K)), List(((0,4),K), ((2,1),K), ((2,3),K), ((4,0),K)), List(((1,4),K), ((2,1),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((2,1),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((3,2),K), ((3,4),K)), List(((0,1),K), ((2,2),K), ((2,4),K), ((4,4),K)), List(((0,3),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((1,0),K), ((1,3),K), ((3,1),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((4,2),K)), List(((0,1),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((2,0),K)), List(((1,0),K), ((2,2),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((3,1),K), ((3,4),K)), List(((0,0),K), ((1,4),K), ((3,0),K), ((3,3),K)), List(((0,1),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((3,0),K), ((4,3),K)), List(((0,4),K), ((2,2),K), ((2,4),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((4,0),K)), List(((1,0),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((3,0),K)), List(((0,0),K), ((1,4),K), ((2,2),K), ((3,4),K)), List(((1,4),K), ((2,0),K), ((2,2),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((2,1),K), ((3,4),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((4,3),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((3,2),K)), List(((0,2),K), ((1,0),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((4,3),K)), List(((0,1),K), ((2,1),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((4,1),K), ((4,3),K)), List(((1,0),K), ((1,4),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((4,2),K)), List(((0,3),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((2,1),K), ((4,0),K), ((4,3),K)), List(((1,2),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((0,4),K), ((2,2),K), ((2,4),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((3,4),K)), List(((0,1),K), ((1,4),K), ((2,1),K), ((4,2),K)), List(((0,1),K), ((2,1),K), ((2,4),K), ((4,2),K)), List(((0,1),K), ((2,2),K), ((3,0),K), ((4,3),K)), List(((1,4),K), ((2,0),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((2,2),K)), List(((0,0),K), ((1,3),K), ((2,0),K), ((3,3),K)), List(((1,1),K), ((1,4),K), ((4,0),K), ((4,4),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((2,4),K)), List(((0,2),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((1,0),K), ((1,4),K), ((3,0),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((3,2),K)), List(((1,1),K), ((1,4),K), ((3,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((3,4),K), ((4,1),K)), List(((1,4),K), ((2,0),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((1,4),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((1,4),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((3,3),K)), List(((0,2),K), ((2,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((3,1),K)), List(((1,2),K), ((1,4),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((0,1),K), ((0,4),K), ((3,1),K), ((3,4),K)), List(((0,0),K), ((1,4),K), ((3,1),K), ((3,4),K)), List(((0,1),K), ((1,4),K), ((2,2),K), ((4,1),K)), List(((1,0),K), ((1,4),K), ((3,1),K), ((3,4),K)), List(((1,0),K), ((1,3),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((2,1),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((2,3),K)), List(((0,0),K), ((3,4),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((1,4),K), ((2,2),K), ((3,4),K)), List(((1,4),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((0,1),K), ((2,1),K), ((3,3),K), ((4,0),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((3,0),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((4,3),K)), List(((0,4),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((1,4),K), ((3,4),K), ((4,2),K)), List(((1,3),K), ((2,1),K), ((4,1),K), ((4,4),K)), List(((2,0),K), ((2,2),K), ((2,4),K), ((4,4),K)), List(((1,2),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((3,1),K), ((3,4),K)), List(((0,4),K), ((2,1),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((4,1),K)), List(((0,0),K), ((2,1),K), ((2,3),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((3,4),K)), List(((0,2),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((3,1),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((2,4),K)), List(((1,0),K), ((1,4),K), ((2,2),K), ((3,0),K)), List(((1,4),K), ((2,1),K), ((3,4),K), ((4,1),K)), List(((0,4),K), ((2,1),K), ((2,3),K), ((4,1),K)), List(((1,4),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((2,2),K), ((3,4),K)), List(((1,1),K), ((1,4),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((4,0),K), ((4,3),K)), List(((1,4),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((2,1),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((1,4),K), ((3,3),K), ((4,1),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((2,4),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((4,0),K)), List(((0,0),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((3,3),K)), List(((0,3),K), ((2,2),K), ((2,4),K), ((3,0),K)), List(((0,0),K), ((2,0),K), ((2,4),K), ((4,4),K)), List(((0,4),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((1,3),K), ((3,4),K), ((4,1),K)), List(((2,1),K), ((2,3),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((1,3),K), ((2,1),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((3,2),K)), List(((0,0),K), ((0,4),K), ((3,4),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((2,4),K)), List(((1,4),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((2,2),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((3,4),K)), List(((0,4),K), ((1,1),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((0,2),K), ((2,2),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((3,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,3),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((4,1),K)), List(((0,3),K), ((2,0),K), ((2,2),K), ((3,4),K)), List(((1,2),K), ((1,4),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((1,0),K), ((1,3),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((2,4),K)), List(((1,0),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((4,2),K)), List(((0,4),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((2,0),K), ((2,2),K), ((3,4),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((4,2),K)), List(((1,0),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((4,4),K)), List(((0,4),K), ((2,3),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((4,2),K), ((4,4),K)), List(((2,4),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,3),K), ((1,0),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,0),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((2,0),K), ((2,4),K), ((4,4),K)), List(((1,1),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((3,1),K)), List(((0,1),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((2,4),K)), List(((1,0),K), ((1,3),K), ((3,1),K), ((3,4),K)), List(((0,4),K), ((1,0),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((3,3),K), ((4,0),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((3,4),K)), List(((1,0),K), ((1,4),K), ((2,2),K), ((4,3),K)), List(((2,0),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((3,2),K)), List(((1,3),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((1,1),K), ((3,2),K), ((4,0),K)), List(((1,1),K), ((1,4),K), ((3,4),K), ((4,2),K)), List(((2,2),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((1,4),K), ((4,0),K), ((4,2),K)), List(((1,2),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((2,2),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((3,0),K)), List(((1,4),K), ((2,1),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((1,3),K), ((3,2),K), ((3,4),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((3,1),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((3,4),K)), List(((0,4),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((3,2),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((4,1),K)), List(((1,1),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((0,2),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((1,2),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((0,2),K), ((2,1),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((1,2),K), ((4,1),K), ((4,3),K)), List(((1,1),K), ((1,3),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((2,4),K), ((3,0),K), ((4,3),K)), List(((1,2),K), ((2,0),K), ((2,4),K), ((4,2),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((2,0),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((3,0),K), ((3,3),K)), List(((0,1),K), ((2,0),K), ((2,2),K), ((4,2),K)), List(((1,2),K), ((2,0),K), ((2,4),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((1,4),K), ((3,4),K), ((4,0),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((4,1),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((2,1),K), ((3,3),K)), List(((0,2),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((4,0),K)), List(((0,3),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,3),K), ((1,0),K), ((2,2),K), ((4,1),K)), List(((0,3),K), ((1,0),K), ((3,2),K), ((4,0),K)), List(((1,1),K), ((1,3),K), ((3,4),K), ((4,1),K)), List(((2,1),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((4,1),K)), List(((1,0),K), ((1,3),K), ((4,0),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,2),K), ((3,4),K)), List(((0,2),K), ((1,4),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((1,0),K), ((1,2),K), ((3,2),K), ((4,0),K)), List(((1,1),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((2,0),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((2,0),K), ((2,3),K)), List(((0,0),K), ((0,2),K), ((2,4),K), ((4,3),K)), List(((0,3),K), ((2,2),K), ((3,0),K), ((3,4),K)), List(((0,2),K), ((1,4),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((4,3),K)), List(((0,3),K), ((2,1),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((3,3),K)), List(((0,4),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((1,4),K), ((2,0),K), ((3,2),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((3,0),K)), List(((2,0),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((4,0),K)), List(((0,1),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((1,0),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,4),K), ((2,0),K), ((2,3),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((4,1),K), ((4,3),K)), List(((1,0),K), ((2,2),K), ((2,4),K), ((4,0),K)), List(((1,1),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((1,4),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((4,1),K)), List(((0,0),K), ((0,4),K), ((2,3),K), ((3,0),K)), List(((0,4),K), ((1,1),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((2,2),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,3),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((3,3),K), ((4,0),K)), List(((2,1),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((2,1),K), ((2,3),K), ((4,3),K)), List(((0,2),K), ((2,0),K), ((2,3),K), ((4,3),K)), List(((1,0),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((2,4),K)), List(((1,2),K), ((1,4),K), ((3,0),K), ((4,4),K)), List(((1,4),K), ((2,2),K), ((3,0),K), ((3,4),K)), List(((0,1),K), ((2,1),K), ((3,4),K), ((4,1),K)), List(((2,0),K), ((2,3),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((2,0),K), ((2,2),K), ((4,1),K)), List(((0,2),K), ((1,0),K), ((4,0),K), ((4,3),K)), List(((1,4),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,2),K), ((2,3),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((3,3),K)), List(((0,1),K), ((0,4),K), ((3,0),K), ((4,2),K)), List(((0,0),K), ((1,4),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((1,4),K), ((2,2),K), ((3,0),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((3,1),K)), List(((0,2),K), ((1,0),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((0,4),K), ((2,4),K), ((3,1),K)), List(((0,1),K), ((2,0),K), ((2,4),K), ((4,1),K)), List(((0,0),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((2,3),K), ((3,0),K), ((4,2),K)), List(((0,4),K), ((1,1),K), ((2,3),K), ((3,1),K)), List(((0,4),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((3,0),K)), List(((0,1),K), ((1,4),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((2,4),K), ((4,3),K)), List(((2,2),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((1,1),K), ((1,4),K), ((4,1),K), ((4,3),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((4,3),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((4,1),K)), List(((0,0),K), ((0,4),K), ((2,2),K), ((4,2),K)), List(((1,0),K), ((1,2),K), ((2,4),K), ((3,0),K)), List(((1,4),K), ((2,0),K), ((4,1),K), ((4,3),K)), List(((1,3),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((0,0),K), ((2,1),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((2,4),K)), List(((0,3),K), ((1,0),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((2,0),K), ((2,2),K), ((4,1),K)), List(((1,0),K), ((1,4),K), ((2,2),K), ((4,1),K)), List(((0,2),K), ((1,4),K), ((2,2),K), ((4,0),K)), List(((0,2),K), ((2,2),K), ((2,4),K), ((4,0),K)), List(((0,0),K), ((0,2),K), ((3,2),K), ((4,4),K)), List(((0,4),K), ((2,1),K), ((2,3),K), ((4,3),K)), List(((0,3),K), ((1,0),K), ((3,4),K), ((4,2),K)), List(((1,1),K), ((2,3),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,2),K), ((4,2),K)), List(((0,0),K), ((1,2),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((2,0),K), ((2,2),K), ((4,3),K)), List(((0,3),K), ((1,1),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((3,4),K)), List(((0,3),K), ((2,0),K), ((2,4),K), ((3,2),K)), List(((0,0),K), ((2,0),K), ((2,4),K), ((3,2),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((3,2),K)), List(((0,3),K), ((2,2),K), ((2,4),K), ((4,3),K)), List(((0,2),K), ((1,0),K), ((3,0),K), ((3,2),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((3,2),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((4,1),K)), List(((0,2),K), ((2,3),K), ((3,1),K), ((4,3),K)), List(((0,3),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((3,3),K), ((4,0),K)), List(((0,4),K), ((2,2),K), ((3,0),K), ((3,4),K)), List(((0,3),K), ((1,1),K), ((3,0),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((2,3),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((3,1),K), ((3,3),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((3,1),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((3,2),K)), List(((0,2),K), ((2,0),K), ((2,2),K), ((4,0),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((4,3),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((3,4),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((3,3),K)), List(((0,0),K), ((2,0),K), ((2,4),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((3,0),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((4,3),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((3,0),K)), List(((0,3),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,2),K), ((4,1),K)), List(((0,1),K), ((2,0),K), ((2,3),K), ((4,1),K)), List(((0,1),K), ((0,4),K), ((3,3),K), ((4,0),K)), List(((1,0),K), ((1,3),K), ((3,3),K), ((4,1),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((3,4),K)), List(((0,4),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((2,2),K)), List(((0,3),K), ((2,4),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((2,1),K), ((2,4),K), ((4,0),K)), List(((1,4),K), ((2,2),K), ((3,4),K), ((4,0),K)), List(((0,0),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((3,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,1),K), ((3,4),K)), List(((1,4),K), ((3,0),K), ((3,2),K), ((3,4),K)), List(((1,0),K), ((2,2),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((3,0),K), ((3,4),K)), List(((0,1),K), ((0,4),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((2,0),K), ((2,2),K), ((4,0),K)), List(((0,2),K), ((2,1),K), ((2,4),K), ((4,2),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((3,4),K)), List(((0,0),K), ((0,2),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((3,2),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((3,1),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((2,1),K)), List(((0,4),K), ((1,0),K), ((1,2),K), ((4,0),K)), List(((0,4),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((2,4),K), ((4,3),K)), List(((1,1),K), ((1,4),K), ((3,0),K), ((3,2),K)), List(((0,4),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((2,0),K), ((2,3),K), ((4,1),K)), List(((0,1),K), ((1,4),K), ((3,0),K), ((3,3),K)), List(((0,3),K), ((2,0),K), ((3,3),K), ((4,0),K)), List(((0,1),K), ((0,4),K), ((2,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((3,0),K), ((3,4),K)), List(((2,0),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((1,0),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((2,2),K), ((2,4),K), ((3,0),K)), List(((0,1),K), ((0,4),K), ((3,4),K), ((4,2),K)), List(((1,0),K), ((2,3),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((4,3),K)), List(((0,0),K), ((1,4),K), ((2,0),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((2,3),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((3,4),K), ((4,1),K)), List(((0,2),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((3,4),K), ((4,1),K)), List(((0,0),K), ((0,3),K), ((4,1),K), ((4,4),K)), List(((1,1),K), ((1,3),K), ((3,0),K), ((3,2),K)), List(((0,3),K), ((1,1),K), ((3,4),K), ((4,2),K)), List(((1,2),K), ((2,4),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((4,2),K)), List(((0,4),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((0,1),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((1,4),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((0,4),K), ((1,1),K), ((2,3),K), ((3,0),K)), List(((0,4),K), ((1,1),K), ((3,2),K), ((4,0),K)), List(((0,4),K), ((2,0),K), ((4,0),K), ((4,3),K)), List(((0,4),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,0),K), ((3,4),K), ((4,1),K)), List(((0,4),K), ((2,0),K), ((2,3),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((4,1),K)), List(((1,1),K), ((1,3),K), ((3,3),K), ((4,1),K)), List(((1,1),K), ((1,4),K), ((3,2),K), ((3,4),K)), List(((0,2),K), ((0,4),K), ((3,0),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((2,3),K), ((3,0),K)), List(((0,2),K), ((2,2),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((2,0),K), ((2,3),K)), List(((0,3),K), ((1,0),K), ((2,3),K), ((4,1),K)), List(((0,0),K), ((1,4),K), ((3,0),K), ((4,4),K)), List(((0,2),K), ((2,1),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((3,4),K)), List(((0,4),K), ((1,1),K), ((3,0),K), ((3,2),K)), List(((0,0),K), ((1,4),K), ((3,0),K), ((4,3),K)), List(((1,0),K), ((1,3),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((1,4),K), ((3,0),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((3,1),K), ((3,4),K)), List(((0,4),K), ((2,1),K), ((2,4),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((4,0),K), ((4,4),K)), List(((0,2),K), ((2,1),K), ((4,0),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((1,4),K), ((3,4),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((3,2),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((3,4),K)), List(((0,0),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((3,1),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((3,4),K)), List(((1,0),K), ((1,3),K), ((4,1),K), ((4,4),K)), List(((1,0),K), ((1,2),K), ((1,4),K), ((4,0),K)), List(((0,1),K), ((1,3),K), ((2,1),K), ((4,2),K)), List(((0,2),K), ((2,1),K), ((2,3),K), ((4,0),K)), List(((0,1),K), ((1,3),K), ((3,3),K), ((4,1),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((3,4),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((3,2),K)), List(((0,3),K), ((2,1),K), ((4,1),K), ((4,3),K)), List(((1,0),K), ((1,2),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((2,0),K), ((2,3),K), ((4,2),K)), List(((0,0),K), ((2,2),K), ((3,0),K), ((3,4),K)), List(((1,2),K), ((1,4),K), ((3,3),K), ((4,1),K)), List(((0,0),K), ((1,4),K), ((3,4),K), ((4,2),K)), List(((0,4),K), ((2,1),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((2,4),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((4,3),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((3,0),K), ((3,4),K)), List(((0,2),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((2,2),K)), List(((0,2),K), ((1,0),K), ((3,3),K), ((4,1),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((3,0),K)), List(((0,1),K), ((1,3),K), ((3,1),K), ((4,3),K)), List(((1,0),K), ((2,3),K), ((4,0),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((4,4),K)), List(((0,3),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((1,3),K), ((3,0),K), ((4,2),K)), List(((0,2),K), ((2,3),K), ((3,0),K), ((4,2),K)), List(((0,2),K), ((1,0),K), ((2,2),K), ((3,0),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((4,2),K)), List(((0,0),K), ((0,3),K), ((2,1),K), ((3,4),K)), List(((0,1),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((0,3),K), ((1,1),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((2,3),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((2,4),K), ((4,0),K)), List(((1,1),K), ((3,2),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((2,0),K), ((2,2),K), ((2,4),K)), List(((1,1),K), ((2,4),K), ((3,0),K), ((4,4),K)), List(((0,0),K), ((2,4),K), ((3,2),K), ((4,0),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((3,2),K)), List(((0,2),K), ((0,4),K), ((2,4),K), ((3,0),K)), List(((0,0),K), ((0,4),K), ((2,3),K), ((4,0),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((2,1),K), ((2,4),K)), List(((0,0),K), ((0,4),K), ((2,3),K), ((4,4),K)), List(((1,1),K), ((1,4),K), ((3,3),K), ((4,0),K)), List(((0,3),K), ((2,4),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((2,4),K), ((4,1),K)), List(((1,0),K), ((2,2),K), ((3,0),K), ((3,4),K)), List(((2,4),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((3,1),K), ((4,3),K)), List(((0,4),K), ((1,1),K), ((2,4),K), ((4,1),K)), List(((0,1),K), ((0,3),K), ((3,0),K), ((3,2),K)), List(((0,2),K), ((1,4),K), ((3,3),K), ((4,1),K)), List(((0,1),K), ((1,4),K), ((3,4),K), ((4,0),K)), List(((1,3),K), ((2,1),K), ((3,4),K), ((4,1),K)), List(((1,1),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((1,3),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((2,0),K), ((3,4),K), ((4,2),K)), List(((0,4),K), ((1,1),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((4,1),K), ((4,3),K)), List(((0,2),K), ((0,4),K), ((2,0),K), ((4,1),K)), List(((0,4),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((4,0),K)), List(((0,4),K), ((2,2),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,4),K), ((4,4),K)), List(((0,2),K), ((1,4),K), ((3,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((0,3),K), ((4,1),K), ((4,3),K)), List(((0,4),K), ((1,0),K), ((3,2),K), ((3,4),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((3,0),K)), List(((0,4),K), ((2,0),K), ((2,4),K), ((4,4),K)), List(((0,1),K), ((0,3),K), ((2,2),K), ((4,0),K)), List(((0,3),K), ((3,0),K), ((4,2),K), ((4,4),K)), List(((0,4),K), ((2,0),K), ((2,2),K), ((3,4),K)), List(((0,0),K), ((0,2),K), ((2,1),K), ((2,4),K)), List(((1,0),K), ((1,3),K), ((3,2),K), ((4,0),K)), List(((0,4),K), ((2,1),K), ((2,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((3,2),K)), List(((0,2),K), ((2,1),K), ((2,3),K), ((4,3),K)), List(((0,0),K), ((2,2),K), ((4,1),K), ((4,3),K)), List(((0,0),K), ((2,4),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((1,2),K), ((2,0),K), ((3,3),K)), List(((0,0),K), ((0,2),K), ((3,1),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((4,0),K), ((4,3),K)), List(((0,3),K), ((2,0),K), ((2,3),K), ((4,0),K)), List(((0,3),K), ((1,1),K), ((2,3),K), ((4,2),K)), List(((1,0),K), ((1,4),K), ((2,2),K), ((3,4),K)), List(((1,1),K), ((1,4),K), ((3,1),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((3,0),K), ((3,3),K)), List(((0,0),K), ((2,0),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((1,1),K), ((2,4),K), ((4,1),K)), List(((0,0),K), ((0,2),K), ((3,2),K), ((4,0),K)), List(((0,1),K), ((2,2),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((4,4),K)), List(((2,0),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,1),K), ((2,2),K), ((3,4),K), ((4,1),K)), List(((0,3),K), ((2,1),K), ((4,0),K), ((4,3),K)), List(((2,2),K), ((2,4),K), ((4,1),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((3,0),K), ((3,4),K)), List(((1,4),K), ((2,2),K), ((4,0),K), ((4,2),K)), List(((0,1),K), ((0,4),K), ((2,2),K), ((2,4),K)), List(((1,2),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((0,4),K), ((2,0),K), ((2,4),K), ((4,3),K)), List(((0,1),K), ((0,4),K), ((2,1),K), ((4,2),K)), List(((0,1),K), ((1,4),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((2,1),K), ((4,4),K)), List(((0,0),K), ((0,3),K), ((3,2),K), ((4,4),K)), List(((0,1),K), ((2,4),K), ((3,0),K), ((3,2),K)), List(((2,1),K), ((4,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((2,1),K), ((4,0),K)), List(((1,1),K), ((1,4),K), ((3,4),K), ((4,1),K)), List(((0,4),K), ((1,0),K), ((2,3),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((3,4),K), ((4,1),K)), List(((1,1),K), ((1,3),K), ((3,1),K), ((4,3),K)), List(((2,2),K), ((3,0),K), ((3,4),K), ((4,2),K)), List(((0,1),K), ((1,3),K), ((2,0),K), ((4,3),K)), List(((1,2),K), ((2,0),K), ((3,2),K), ((3,4),K)), List(((1,1),K), ((2,4),K), ((4,0),K), ((4,4),K)), List(((1,0),K), ((1,4),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((1,1),K), ((2,3),K), ((4,1),K)), List(((0,2),K), ((1,0),K), ((4,0),K), ((4,4),K)), List(((1,2),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,0),K), ((0,3),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,2),K), ((3,4),K), ((4,2),K)), List(((0,3),K), ((2,0),K), ((4,1),K), ((4,4),K)), List(((0,3),K), ((2,1),K), ((3,4),K), ((4,0),K)), List(((1,0),K), ((1,2),K), ((3,4),K), ((4,2),K)), List(((0,2),K), ((2,0),K), ((3,3),K), ((4,1),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((2,1),K), ((4,0),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((2,0),K)), List(((0,4),K), ((1,1),K), ((2,3),K), ((4,3),K)), List(((0,0),K), ((1,3),K), ((4,0),K), ((4,2),K)), List(((1,0),K), ((1,3),K), ((3,0),K), ((3,4),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((2,4),K)), List(((0,0),K), ((1,2),K), ((1,4),K), ((3,3),K)), List(((0,0),K), ((0,3),K), ((3,1),K), ((3,4),K)), List(((1,0),K), ((1,3),K), ((3,4),K), ((4,0),K)), List(((0,3),K), ((1,0),K), ((3,1),K), ((4,3),K)), List(((0,1),K), ((2,0),K), ((4,0),K), ((4,2),K)), List(((0,4),K), ((1,2),K), ((4,2),K), ((4,4),K)), List(((0,2),K), ((0,4),K), ((1,0),K), ((4,4),K)), List(((1,1),K), ((1,4),K), ((4,0),K), ((4,3),K)), List(((0,4),K), ((2,0),K), ((2,4),K), ((4,2),K)), List(((1,1),K), ((1,3),K), ((3,4),K), ((4,0),K)), List(((0,1),K), ((1,4),K), ((2,0),K), ((4,0),K)), List(((0,1),K), ((2,0),K), ((2,3),K), ((4,3),K)), List(((1,2),K), ((2,0),K), ((2,4),K), ((4,0),K)), List(((0,1),K), ((2,2),K), ((3,0),K), ((3,4),K)), List(((0,1),K), ((0,4),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((0,4),K), ((2,2),K), ((4,1),K)), List(((0,1),K), ((3,2),K), ((3,4),K), ((4,0),K)), List(((1,3),K), ((2,0),K), ((3,2),K), ((4,0),K)), List(((0,2),K), ((2,0),K), ((2,4),K), ((4,0),K)), List(((0,2),K), ((1,4),K), ((4,0),K), ((4,4),K)), List(((0,1),K), ((1,3),K), ((4,0),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((3,0),K), ((4,3),K)), List(((0,3),K), ((2,0),K), ((4,0),K), ((4,4),K)), List(((1,2),K), ((1,4),K), ((3,1),K), ((3,4),K)), List(((0,0),K), ((0,4),K), ((2,0),K), ((3,4),K)), List(((0,4),K), ((1,2),K), ((3,2),K), ((4,4),K)), List(((0,0),K), ((1,2),K), ((2,0),K), ((3,3),K)), List(((0,2),K), ((1,0),K), ((2,3),K), ((3,1),K)), List(((0,0),K), ((1,3),K), ((4,2),K), ((4,4),K)), List(((0,1),K), ((1,4),K), ((2,1),K), ((3,3),K)), List(((0,1),K), ((2,4),K), ((3,1),K), ((4,3),K)), List(((0,2),K), ((1,4),K), ((3,4),K), ((4,2),K)), List(((0,0),K), ((0,2),K), ((2,0),K), ((2,3),K)), List(((0,0),K), ((0,2),K), ((0,4),K), ((4,4),K)), List(((0,1),K), ((0,4),K), ((3,1),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((1,2),K), ((4,0),K)), List(((0,0),K), ((0,3),K), ((2,2),K), ((4,4),K)), List(((0,0),K), ((0,4),K), ((4,1),K), ((4,3),K)), List(((0,1),K), ((2,0),K), ((4,2),K), ((4,4),K)), List(((0,0),K), ((1,3),K), ((3,4),K), ((4,1),K)), List(((1,2),K), ((3,0),K), ((3,2),K), ((4,4),K)), List(((0,3),K), ((1,0),K), ((3,1),K), ((4,4),K)), List(((0,4),K), ((2,4),K), ((4,0),K), ((4,3),K)), List(((0,3),K), ((2,1),K), ((2,3),K), ((4,3),K)), List(((0,4),K), ((2,3),K), ((3,0),K), ((4,2),K)))"}
{"@timestamp":"2020-05-28T17:24:28.743+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:24:28.744+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"5x5\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":4},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":4},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:24:28.744+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(5x5,[Lcontrollers.PieceInput;@7aa93641)"}
{"@timestamp":"2020-05-28T17:24:29.003+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-11","message":"Success onComplete List()"}
{"@timestamp":"2020-05-28T17:24:36.567+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:24:36.567+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"5x5\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":2},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":4},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:24:36.569+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(5x5,[Lcontrollers.PieceInput;@2b07458c)"}
{"@timestamp":"2020-05-28T17:24:36.638+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-12","message":"Success onComplete List()"}
{"@timestamp":"2020-05-28T17:24:43.331+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:24:43.332+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"5x5\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":4},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:24:43.333+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(5x5,[Lcontrollers.PieceInput;@23731f7d)"}
{"@timestamp":"2020-05-28T17:24:43.360+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-13","message":"Success onComplete List(List(((0,0),Q), ((1,2),Q), ((2,4),Q), ((4,3),Q)), List(((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q)), List(((0,3),Q), ((1,1),Q), ((3,4),Q), ((4,0),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((4,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,3),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((4,0),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((4,3),Q)), List(((0,2),Q), ((1,0),Q), ((3,1),Q), ((4,4),Q)), List(((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,3),Q)), List(((0,3),Q), ((2,0),Q), ((3,2),Q), ((4,4),Q)), List(((0,1),Q), ((1,3),Q), ((3,0),Q), ((4,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q)), List(((0,0),Q), ((1,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,1),Q), ((1,4),Q), ((3,3),Q), ((4,0),Q)), List(((0,2),Q), ((2,3),Q), ((3,1),Q), ((4,4),Q)), List(((0,3),Q), ((1,1),Q), ((3,2),Q), ((4,0),Q)), List(((0,2),Q), ((2,3),Q), ((3,0),Q), ((4,4),Q)), List(((0,0),Q), ((2,1),Q), ((3,4),Q), ((4,2),Q)), List(((0,0),Q), ((1,3),Q), ((3,4),Q), ((4,1),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((4,2),Q)), List(((0,3),Q), ((1,0),Q), ((3,4),Q), ((4,1),Q)), List(((0,2),Q), ((1,0),Q), ((3,3),Q), ((4,1),Q)), List(((1,2),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q)), List(((0,1),Q), ((2,4),Q), ((3,0),Q), ((4,3),Q)), List(((0,1),Q), ((1,4),Q), ((2,0),Q), ((3,3),Q)), List(((1,0),Q), ((2,3),Q), ((3,1),Q), ((4,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,0),Q), ((4,4),Q)), List(((0,3),Q), ((1,0),Q), ((3,1),Q), ((4,4),Q)), List(((0,2),Q), ((1,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,2),Q), ((1,4),Q), ((3,0),Q), ((4,3),Q)), List(((1,2),Q), ((2,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,1),Q), ((1,3),Q), ((3,0),Q), ((4,4),Q)), List(((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,3),Q)), List(((0,1),Q), ((1,4),Q), ((2,0),Q), ((4,3),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),Q), ((4,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q)), List(((0,2),Q), ((1,0),Q), ((3,4),Q), ((4,1),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),Q), ((3,1),Q)), List(((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,2),Q)), List(((0,1),Q), ((1,3),Q), ((3,2),Q), ((4,4),Q)), List(((0,0),Q), ((1,2),Q), ((2,4),Q), ((4,1),Q)), List(((0,0),Q), ((1,2),Q), ((2,4),Q), ((3,1),Q)), List(((0,4),Q), ((1,0),Q), ((3,3),Q), ((4,1),Q)), List(((0,1),Q), ((1,4),Q), ((3,0),Q), ((4,3),Q)), List(((0,0),Q), ((2,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,1),Q), ((2,0),Q), ((3,2),Q), ((4,4),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q)), List(((1,1),Q), ((2,4),Q), ((3,0),Q), ((4,3),Q)), List(((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q)), List(((0,4),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q)), List(((0,3),Q), ((1,0),Q), ((3,4),Q), ((4,2),Q)), List(((0,3),Q), ((2,2),Q), ((3,4),Q), ((4,1),Q)), List(((0,4),Q), ((1,2),Q), ((3,3),Q), ((4,1),Q)), List(((0,1),Q), ((2,2),Q), ((3,0),Q), ((4,3),Q)), List(((0,4),Q), ((1,1),Q), ((3,0),Q), ((4,3),Q)), List(((0,2),Q), ((1,4),Q), ((3,3),Q), ((4,0),Q)), List(((0,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q)), List(((0,0),Q), ((1,3),Q), ((3,4),Q), ((4,2),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),Q), ((3,4),Q)), List(((1,0),Q), ((2,2),Q), ((3,4),Q), ((4,1),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((4,2),Q)), List(((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,4),Q)), List(((0,2),Q), ((2,1),Q), ((3,4),Q), ((4,0),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((4,1),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),Q), ((4,4),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),Q), ((4,2),Q)), List(((0,4),Q), ((1,1),Q), ((3,0),Q), ((4,2),Q)), List(((0,3),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q)), List(((0,2),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q)), List(((0,3),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q)), List(((0,0),Q), ((1,2),Q), ((3,1),Q), ((4,3),Q)), List(((0,0),Q), ((1,4),Q), ((2,1),Q), ((4,2),Q)), List(((0,1),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q)), List(((0,3),Q), ((1,1),Q), ((3,4),Q), ((4,2),Q)), List(((0,4),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q)), List(((0,1),Q), ((1,4),Q), ((3,0),Q), ((4,2),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),Q), ((4,1),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((4,0),Q)), List(((1,4),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q)))"}
{"@timestamp":"2020-05-28T17:24:53.681+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:24:53.681+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"5x5\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":4},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":1},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:24:53.683+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(5x5,[Lcontrollers.PieceInput;@2f491a22)"}
{"@timestamp":"2020-05-28T17:24:53.700+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-14","message":"Success onComplete List(List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,3),R), ((4,0),Q)), List(((0,0),Q), ((1,2),Q), ((2,4),R), ((3,1),Q), ((4,3),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),Q), ((3,1),R), ((4,4),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),Q), ((3,4),Q), ((4,1),R)), List(((0,0),Q), ((1,2),Q), ((2,4),Q), ((3,1),R), ((4,3),Q)), List(((0,0),Q), ((1,2),Q), ((2,4),Q), ((3,1),Q), ((4,3),R)), List(((0,3),Q), ((1,1),Q), ((2,4),R), ((3,2),Q), ((4,0),Q)), List(((0,2),Q), ((1,4),R), ((2,1),Q), ((3,3),Q), ((4,0),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,3),R), ((4,1),Q)), List(((0,0),Q), ((1,2),R), ((2,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),Q), ((3,4),R), ((4,2),Q)), List(((0,0),R), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),Q), ((3,0),R), ((4,3),Q)), List(((0,0),R), ((1,2),Q), ((2,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,4),Q), ((1,1),R), ((2,3),Q), ((3,0),Q), ((4,2),Q)), List(((0,1),Q), ((1,3),Q), ((2,0),R), ((3,2),Q), ((4,4),Q)), List(((0,4),R), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q)), List(((0,1),R), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,4),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,0),R), ((4,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,3),R)), List(((0,4),Q), ((1,1),Q), ((2,3),R), ((3,0),Q), ((4,2),Q)), List(((0,2),R), ((1,4),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q)), List(((0,4),R), ((1,2),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q)), List(((0,2),Q), ((1,0),R), ((2,3),Q), ((3,1),Q), ((4,4),Q)), List(((0,3),R), ((1,0),Q), ((2,2),Q), ((3,4),Q), ((4,1),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),R), ((3,4),Q), ((4,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,3),Q), ((4,1),R)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,2),R)), List(((0,1),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,4),R)), List(((0,2),Q), ((1,0),Q), ((2,3),Q), ((3,1),Q), ((4,4),R)), List(((0,3),Q), ((1,1),R), ((2,4),Q), ((3,2),Q), ((4,0),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,2),R)), List(((0,3),Q), ((1,0),R), ((2,2),Q), ((3,4),Q), ((4,1),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),R), ((3,0),Q), ((4,3),Q)), List(((0,1),Q), ((1,4),R), ((2,2),Q), ((3,0),Q), ((4,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),R)), List(((0,2),Q), ((1,4),Q), ((2,1),R), ((3,3),Q), ((4,0),Q)), List(((0,3),R), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q)), List(((0,4),Q), ((1,2),R), ((2,0),Q), ((3,3),Q), ((4,1),Q)), List(((0,1),Q), ((1,3),R), ((2,0),Q), ((3,2),Q), ((4,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,0),Q), ((3,2),R), ((4,4),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),R), ((3,4),Q), ((4,2),Q)), List(((0,1),R), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,3),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),R), ((3,1),Q), ((4,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,2),R), ((4,0),Q)), List(((0,2),R), ((1,0),Q), ((2,3),Q), ((3,1),Q), ((4,4),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,3),Q), ((4,0),R)), List(((0,4),Q), ((1,2),Q), ((2,0),R), ((3,3),Q), ((4,1),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),Q), ((3,4),R), ((4,1),Q)), List(((0,0),Q), ((1,3),R), ((2,1),Q), ((3,4),Q), ((4,2),Q)))"}
{"@timestamp":"2020-05-28T17:25:04.372+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:25:04.372+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"5x5\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":4},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":1},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":1},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:25:04.375+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(5x5,[Lcontrollers.PieceInput;@3c9146b6)"}
{"@timestamp":"2020-05-28T17:25:04.405+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-15","message":"Success onComplete List()"}
{"@timestamp":"2020-05-28T17:25:09.484+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:25:09.485+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"5x5\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":3},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":1},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":1},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:25:09.486+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(5x5,[Lcontrollers.PieceInput;@279f66e5)"}
{"@timestamp":"2020-05-28T17:25:09.523+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-16","message":"Success onComplete List(List(((0,2),R), ((1,4),Q), ((2,1),Q), ((3,3),B), ((4,0),Q)), List(((0,1),Q), ((1,4),R), ((2,2),Q), ((3,0),B), ((4,3),Q)), List(((0,1),Q), ((1,4),B), ((2,2),R), ((3,0),Q), ((4,3),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),R), ((3,3),Q), ((4,0),B)), List(((0,4),Q), ((1,1),Q), ((2,3),R), ((3,0),Q), ((4,2),B)), List(((0,3),B), ((1,0),Q), ((2,2),Q), ((3,4),R), ((4,1),Q)), List(((0,3),B), ((1,1),Q), ((2,4),R), ((3,2),Q), ((4,0),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),R), ((3,4),B), ((4,1),Q)), List(((0,0),B), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,2),R)), List(((0,1),R), ((1,3),Q), ((2,0),B), ((3,2),Q), ((4,4),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),B), ((3,0),R), ((4,3),Q)), List(((0,1),Q), ((1,3),Q), ((2,0),Q), ((3,2),R), ((4,4),B)), List(((0,1),Q), ((1,3),Q), ((2,0),R), ((3,2),Q), ((4,4),B)), List(((0,3),Q), ((1,1),R), ((2,4),B), ((3,2),Q), ((4,0),Q)), List(((0,2),Q), ((1,0),B), ((2,3),Q), ((3,1),R), ((4,4),Q)), List(((0,1),Q), ((1,3),R), ((2,0),B), ((3,2),Q), ((4,4),Q)), List(((0,2),Q), ((1,4),B), ((2,1),Q), ((3,3),Q), ((4,0),R)), List(((0,3),R), ((1,1),Q), ((2,4),B), ((3,2),Q), ((4,0),Q)), List(((0,4),B), ((1,2),Q), ((2,0),R), ((3,3),Q), ((4,1),Q)), List(((0,3),Q), ((1,1),B), ((2,4),Q), ((3,2),Q), ((4,0),R)), List(((0,3),Q), ((1,1),Q), ((2,4),B), ((3,2),Q), ((4,0),R)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,3),B), ((4,0),R)), List(((0,3),Q), ((1,0),R), ((2,2),B), ((3,4),Q), ((4,1),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),B), ((3,0),Q), ((4,2),R)), List(((0,1),B), ((1,4),Q), ((2,2),Q), ((3,0),R), ((4,3),Q)), List(((0,4),R), ((1,2),Q), ((2,0),Q), ((3,3),Q), ((4,1),B)), List(((0,4),Q), ((1,2),R), ((2,0),Q), ((3,3),B), ((4,1),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),B), ((3,4),R), ((4,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,2),B), ((4,0),R)), List(((0,3),B), ((1,0),Q), ((2,2),R), ((3,4),Q), ((4,1),Q)), List(((0,4),Q), ((1,1),B), ((2,3),Q), ((3,0),R), ((4,2),Q)), List(((0,3),R), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),B)), List(((0,2),R), ((1,4),Q), ((2,1),B), ((3,3),Q), ((4,0),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),B), ((3,4),Q), ((4,2),R)), List(((0,3),R), ((1,0),Q), ((2,2),Q), ((3,4),Q), ((4,1),B)), List(((0,3),B), ((1,0),R), ((2,2),Q), ((3,4),Q), ((4,1),Q)), List(((0,0),R), ((1,2),Q), ((2,4),B), ((3,1),Q), ((4,3),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),R), ((3,1),Q), ((4,4),B)), List(((0,1),Q), ((1,3),Q), ((2,0),B), ((3,2),R), ((4,4),Q)), List(((0,3),B), ((1,0),Q), ((2,2),Q), ((3,4),Q), ((4,1),R)), List(((0,0),Q), ((1,3),B), ((2,1),Q), ((3,4),Q), ((4,2),R)), List(((0,2),Q), ((1,4),Q), ((2,1),B), ((3,3),Q), ((4,0),R)), List(((0,1),B), ((1,3),R), ((2,0),Q), ((3,2),Q), ((4,4),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,3),R), ((4,1),B)), List(((0,3),Q), ((1,0),B), ((2,2),Q), ((3,4),R), ((4,1),Q)), List(((0,3),R), ((1,0),Q), ((2,2),B), ((3,4),Q), ((4,1),Q)), List(((0,1),Q), ((1,4),R), ((2,2),B), ((3,0),Q), ((4,3),Q)), List(((0,0),Q), ((1,2),Q), ((2,4),R), ((3,1),Q), ((4,3),B)), List(((0,4),B), ((1,2),Q), ((2,0),Q), ((3,3),Q), ((4,1),R)), List(((0,0),B), ((1,2),Q), ((2,4),Q), ((3,1),R), ((4,3),Q)), List(((0,1),Q), ((1,4),B), ((2,2),Q), ((3,0),R), ((4,3),Q)), List(((0,0),Q), ((1,3),B), ((2,1),R), ((3,4),Q), ((4,2),Q)), List(((0,1),R), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,3),B)), List(((0,3),B), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),R)), List(((0,1),B), ((1,4),R), ((2,2),Q), ((3,0),Q), ((4,3),Q)), List(((0,3),Q), ((1,0),R), ((2,2),Q), ((3,4),B), ((4,1),Q)), List(((0,2),Q), ((1,4),R), ((2,1),Q), ((3,3),B), ((4,0),Q)), List(((0,0),R), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,2),B)), List(((0,1),B), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,3),R)), List(((0,0),Q), ((1,3),B), ((2,1),Q), ((3,4),R), ((4,2),Q)), List(((0,2),Q), ((1,0),R), ((2,3),Q), ((3,1),Q), ((4,4),B)), List(((0,0),Q), ((1,2),B), ((2,4),Q), ((3,1),R), ((4,3),Q)), List(((0,4),Q), ((1,1),R), ((2,3),Q), ((3,0),B), ((4,2),Q)), List(((0,1),Q), ((1,4),B), ((2,2),Q), ((3,0),Q), ((4,3),R)), List(((0,4),Q), ((1,2),R), ((2,0),B), ((3,3),Q), ((4,1),Q)), List(((0,3),B), ((1,1),Q), ((2,4),Q), ((3,2),R), ((4,0),Q)), List(((0,2),Q), ((1,0),R), ((2,3),Q), ((3,1),B), ((4,4),Q)), List(((0,0),Q), ((1,3),R), ((2,1),Q), ((3,4),B), ((4,2),Q)), List(((0,4),R), ((1,1),Q), ((2,3),Q), ((3,0),B), ((4,2),Q)), List(((0,4),R), ((1,2),Q), ((2,0),Q), ((3,3),B), ((4,1),Q)), List(((0,0),Q), ((1,2),B), ((2,4),R), ((3,1),Q), ((4,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),Q), ((3,4),B), ((4,1),R)), List(((0,3),Q), ((1,0),Q), ((2,2),B), ((3,4),Q), ((4,1),R)), List(((0,2),B), ((1,0),Q), ((2,3),R), ((3,1),Q), ((4,4),Q)), List(((0,4),R), ((1,1),B), ((2,3),Q), ((3,0),Q), ((4,2),Q)), List(((0,0),Q), ((1,2),B), ((2,4),Q), ((3,1),Q), ((4,3),R)), List(((0,1),B), ((1,4),Q), ((2,2),R), ((3,0),Q), ((4,3),Q)), List(((0,3),Q), ((1,1),B), ((2,4),R), ((3,2),Q), ((4,0),Q)), List(((0,4),Q), ((1,2),B), ((2,0),R), ((3,3),Q), ((4,1),Q)), List(((0,4),Q), ((1,2),B), ((2,0),Q), ((3,3),Q), ((4,1),R)), List(((0,0),B), ((1,3),Q), ((2,1),Q), ((3,4),R), ((4,2),Q)), List(((0,3),Q), ((1,1),B), ((2,4),Q), ((3,2),R), ((4,0),Q)), List(((0,1),R), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,4),B)), List(((0,3),Q), ((1,1),Q), ((2,4),R), ((3,2),B), ((4,0),Q)), List(((0,1),Q), ((1,3),R), ((2,0),Q), ((3,2),Q), ((4,4),B)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,2),R), ((4,0),B)), List(((0,3),Q), ((1,0),B), ((2,2),Q), ((3,4),Q), ((4,1),R)), List(((0,1),R), ((1,4),B), ((2,2),Q), ((3,0),Q), ((4,3),Q)), List(((0,4),Q), ((1,1),R), ((2,3),Q), ((3,0),Q), ((4,2),B)), List(((0,2),B), ((1,4),R), ((2,1),Q), ((3,3),Q), ((4,0),Q)), List(((0,1),Q), ((1,3),R), ((2,0),Q), ((3,2),B), ((4,4),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),B), ((3,1),Q), ((4,4),R)), List(((0,3),R), ((1,1),B), ((2,4),Q), ((3,2),Q), ((4,0),Q)), List(((0,4),B), ((1,2),Q), ((2,0),Q), ((3,3),R), ((4,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,3),R), ((4,0),B)), List(((0,2),Q), ((1,4),B), ((2,1),Q), ((3,3),R), ((4,0),Q)), List(((0,2),B), ((1,0),R), ((2,3),Q), ((3,1),Q), ((4,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,0),B), ((3,2),Q), ((4,4),R)), List(((0,4),R), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,2),B)), List(((0,1),Q), ((1,3),Q), ((2,0),R), ((3,2),B), ((4,4),Q)), List(((0,3),B), ((1,1),R), ((2,4),Q), ((3,2),Q), ((4,0),Q)), List(((0,2),R), ((1,4),Q), ((2,1),Q), ((3,3),Q), ((4,0),B)), List(((0,4),B), ((1,2),R), ((2,0),Q), ((3,3),Q), ((4,1),Q)), List(((0,1),B), ((1,3),Q), ((2,0),R), ((3,2),Q), ((4,4),Q)), List(((0,0),Q), ((1,2),R), ((2,4),Q), ((3,1),B), ((4,3),Q)), List(((0,4),Q), ((1,1),B), ((2,3),R), ((3,0),Q), ((4,2),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),Q), ((3,1),R), ((4,4),B)), List(((0,0),B), ((1,3),Q), ((2,1),R), ((3,4),Q), ((4,2),Q)), List(((0,0),Q), ((1,3),Q), ((2,1),Q), ((3,4),B), ((4,2),R)), List(((0,0),R), ((1,3),Q), ((2,1),B), ((3,4),Q), ((4,2),Q)), List(((0,2),R), ((1,0),B), ((2,3),Q), ((3,1),Q), ((4,4),Q)), List(((0,2),Q), ((1,4),B), ((2,1),R), ((3,3),Q), ((4,0),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),R), ((3,0),Q), ((4,3),B)), List(((0,0),Q), ((1,2),Q), ((2,4),B), ((3,1),Q), ((4,3),R)), List(((0,0),B), ((1,2),R), ((2,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,4),B), ((1,1),Q), ((2,3),R), ((3,0),Q), ((4,2),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),B), ((3,4),R), ((4,1),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),B), ((3,2),R), ((4,0),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),B), ((3,3),R), ((4,1),Q)), List(((0,0),R), ((1,3),B), ((2,1),Q), ((3,4),Q), ((4,2),Q)), List(((0,0),Q), ((1,2),Q), ((2,4),Q), ((3,1),B), ((4,3),R)), List(((0,0),Q), ((1,2),R), ((2,4),B), ((3,1),Q), ((4,3),Q)), List(((0,4),B), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,2),R)), List(((0,1),Q), ((1,4),Q), ((2,2),Q), ((3,0),B), ((4,3),R)), List(((0,2),Q), ((1,0),B), ((2,3),R), ((3,1),Q), ((4,4),Q)), List(((0,0),Q), ((1,2),Q), ((2,4),B), ((3,1),R), ((4,3),Q)), List(((0,2),R), ((1,0),Q), ((2,3),Q), ((3,1),Q), ((4,4),B)), List(((0,2),Q), ((1,0),Q), ((2,3),R), ((3,1),B), ((4,4),Q)), List(((0,4),R), ((1,1),Q), ((2,3),B), ((3,0),Q), ((4,2),Q)), List(((0,0),R), ((1,2),Q), ((2,4),Q), ((3,1),B), ((4,3),Q)), List(((0,3),Q), ((1,1),R), ((2,4),Q), ((3,2),B), ((4,0),Q)), List(((0,2),Q), ((1,0),Q), ((2,3),Q), ((3,1),B), ((4,4),R)), List(((0,0),Q), ((1,3),Q), ((2,1),R), ((3,4),B), ((4,2),Q)), List(((0,1),R), ((1,3),B), ((2,0),Q), ((3,2),Q), ((4,4),Q)), List(((0,1),B), ((1,3),Q), ((2,0),Q), ((3,2),R), ((4,4),Q)), List(((0,2),R), ((1,0),Q), ((2,3),Q), ((3,1),B), ((4,4),Q)), List(((0,3),R), ((1,0),Q), ((2,2),Q), ((3,4),B), ((4,1),Q)), List(((0,0),R), ((1,2),B), ((2,4),Q), ((3,1),Q), ((4,3),Q)), List(((0,2),B), ((1,4),Q), ((2,1),R), ((3,3),Q), ((4,0),Q)), List(((0,0),B), ((1,2),Q), ((2,4),R), ((3,1),Q), ((4,3),Q)), List(((0,4),B), ((1,1),R), ((2,3),Q), ((3,0),Q), ((4,2),Q)), List(((0,1),R), ((1,4),Q), ((2,2),Q), ((3,0),B), ((4,3),Q)), List(((0,1),Q), ((1,4),Q), ((2,2),R), ((3,0),B), ((4,3),Q)), List(((0,0),B), ((1,2),Q), ((2,4),Q), ((3,1),Q), ((4,3),R)), List(((0,1),Q), ((1,4),Q), ((2,2),Q), ((3,0),R), ((4,3),B)), List(((0,0),R), ((1,3),Q), ((2,1),Q), ((3,4),B), ((4,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),B), ((3,3),Q), ((4,1),R)), List(((0,3),R), ((1,1),Q), ((2,4),Q), ((3,2),B), ((4,0),Q)), List(((0,4),R), ((1,2),Q), ((2,0),B), ((3,3),Q), ((4,1),Q)), List(((0,2),Q), ((1,4),R), ((2,1),B), ((3,3),Q), ((4,0),Q)), List(((0,1),Q), ((1,3),B), ((2,0),Q), ((3,2),R), ((4,4),Q)), List(((0,3),Q), ((1,0),B), ((2,2),R), ((3,4),Q), ((4,1),Q)), List(((0,4),Q), ((1,2),R), ((2,0),Q), ((3,3),Q), ((4,1),B)), List(((0,1),Q), ((1,4),Q), ((2,2),B), ((3,0),Q), ((4,3),R)), List(((0,0),Q), ((1,2),Q), ((2,4),R), ((3,1),B), ((4,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),B), ((3,0),R), ((4,2),Q)), List(((0,0),Q), ((1,3),R), ((2,1),B), ((3,4),Q), ((4,2),Q)), List(((0,3),R), ((1,0),B), ((2,2),Q), ((3,4),Q), ((4,1),Q)), List(((0,2),Q), ((1,0),B), ((2,3),Q), ((3,1),Q), ((4,4),R)), List(((0,0),Q), ((1,3),Q), ((2,1),Q), ((3,4),R), ((4,2),B)), List(((0,4),Q), ((1,2),Q), ((2,0),R), ((3,3),B), ((4,1),Q)), List(((0,0),Q), ((1,2),R), ((2,4),Q), ((3,1),Q), ((4,3),B)), List(((0,1),R), ((1,3),Q), ((2,0),Q), ((3,2),B), ((4,4),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,0),R), ((4,2),B)), List(((0,0),Q), ((1,2),Q), ((2,4),Q), ((3,1),R), ((4,3),B)), List(((0,0),B), ((1,3),R), ((2,1),Q), ((3,4),Q), ((4,2),Q)), List(((0,2),Q), ((1,0),R), ((2,3),B), ((3,1),Q), ((4,4),Q)), List(((0,4),Q), ((1,1),R), ((2,3),B), ((3,0),Q), ((4,2),Q)), List(((0,0),R), ((1,2),Q), ((2,4),Q), ((3,1),Q), ((4,3),B)), List(((0,2),Q), ((1,0),Q), ((2,3),B), ((3,1),R), ((4,4),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),R), ((3,3),Q), ((4,1),B)), List(((0,4),Q), ((1,1),Q), ((2,3),R), ((3,0),B), ((4,2),Q)), List(((0,4),Q), ((1,1),B), ((2,3),Q), ((3,0),Q), ((4,2),R)), List(((0,0),Q), ((1,3),Q), ((2,1),R), ((3,4),Q), ((4,2),B)), List(((0,3),Q), ((1,1),Q), ((2,4),R), ((3,2),Q), ((4,0),B)), List(((0,3),Q), ((1,0),Q), ((2,2),Q), ((3,4),R), ((4,1),B)), List(((0,3),Q), ((1,1),R), ((2,4),Q), ((3,2),Q), ((4,0),B)), List(((0,3),Q), ((1,0),R), ((2,2),Q), ((3,4),Q), ((4,1),B)), List(((0,2),B), ((1,0),Q), ((2,3),Q), ((3,1),R), ((4,4),Q)), List(((0,1),Q), ((1,3),B), ((2,0),R), ((3,2),Q), ((4,4),Q)), List(((0,1),Q), ((1,3),B), ((2,0),Q), ((3,2),Q), ((4,4),R)), List(((0,2),Q), ((1,4),Q), ((2,1),B), ((3,3),R), ((4,0),Q)), List(((0,3),Q), ((1,0),Q), ((2,2),R), ((3,4),Q), ((4,1),B)), List(((0,2),Q), ((1,4),Q), ((2,1),R), ((3,3),B), ((4,0),Q)), List(((0,1),R), ((1,4),Q), ((2,2),B), ((3,0),Q), ((4,3),Q)), List(((0,2),R), ((1,4),B), ((2,1),Q), ((3,3),Q), ((4,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,0),B), ((4,2),R)), List(((0,2),R), ((1,0),Q), ((2,3),B), ((3,1),Q), ((4,4),Q)), List(((0,4),B), ((1,1),Q), ((2,3),Q), ((3,0),R), ((4,2),Q)), List(((0,4),R), ((1,2),B), ((2,0),Q), ((3,3),Q), ((4,1),Q)), List(((0,2),B), ((1,4),Q), ((2,1),Q), ((3,3),R), ((4,0),Q)), List(((0,4),Q), ((1,2),B), ((2,0),Q), ((3,3),R), ((4,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,3),B), ((4,1),R)), List(((0,2),Q), ((1,4),R), ((2,1),Q), ((3,3),Q), ((4,0),B)), List(((0,2),B), ((1,4),Q), ((2,1),Q), ((3,3),Q), ((4,0),R)), List(((0,0),Q), ((1,3),R), ((2,1),Q), ((3,4),Q), ((4,2),B)), List(((0,2),B), ((1,0),Q), ((2,3),Q), ((3,1),Q), ((4,4),R)), List(((0,1),Q), ((1,4),R), ((2,2),Q), ((3,0),Q), ((4,3),B)), List(((0,1),Q), ((1,3),Q), ((2,0),Q), ((3,2),B), ((4,4),R)), List(((0,1),B), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,4),R)))"}
{"@timestamp":"2020-05-28T17:25:30.016+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-17","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:25:30.017+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-17","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:25:30.018+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-17","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@1ee9b56d)"}
{"@timestamp":"2020-05-28T17:25:41.964+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-18","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:27:51.576+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-19","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:27:51.576+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-19","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:27:51.577+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-19","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@11cf43e5)"}
{"@timestamp":"2020-05-28T17:27:53.281+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-19","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:27:53.281+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-19","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:27:53.283+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-19","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@50f249de)"}
{"@timestamp":"2020-05-28T17:28:05.121+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-20","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:28:07.196+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-21","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:29:05.532+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:29:05.532+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:29:05.534+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@623c5e54)"}
{"@timestamp":"2020-05-28T17:29:06.547+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:29:06.548+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:29:06.548+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@2301546f)"}
{"@timestamp":"2020-05-28T17:29:07.765+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:29:07.766+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:29:07.767+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@1268113f)"}
{"@timestamp":"2020-05-28T17:29:08.564+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:29:08.564+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:29:08.565+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@432eab20)"}
{"@timestamp":"2020-05-28T17:29:09.674+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:29:09.676+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:29:09.677+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@320634ef)"}
{"@timestamp":"2020-05-28T17:29:10.169+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:29:10.170+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:29:10.170+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@71a1d618)"}
{"@timestamp":"2020-05-28T17:29:11.180+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:29:11.180+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:29:11.181+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-22","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@476014a7)"}
{"@timestamp":"2020-05-28T17:29:26.487+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-23","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:29:28.705+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-24","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:29:31.002+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-25","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:29:31.909+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-26","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:29:32.802+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-27","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:29:43.320+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-23","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:29:44.544+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-24","message":"Success onComplete List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q)))"}
{"@timestamp":"2020-05-28T17:40:47.740+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-4","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-28T17:40:47.824+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-4","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-28T17:40:48.095+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-4","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-28T17:40:48.106+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-4","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-28T17:40:48.571+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:40:48.583+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:40:48.765+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-6","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@6e8be90e)"}
{"@timestamp":"2020-05-28T17:41:00.250+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-7","message":"Success onComplete RestResult(11469,List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q))))"}
{"@timestamp":"2020-05-28T17:41:14.478+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:41:14.479+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:41:14.481+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@3ae381c2)"}
{"@timestamp":"2020-05-28T17:41:24.541+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-9","message":"Success onComplete RestResult(10041,List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q))))"}
{"@timestamp":"2020-05-28T17:42:32.874+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:42:32.875+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:42:32.877+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-10","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@7ad6dab1)"}
{"@timestamp":"2020-05-28T17:42:46.128+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-11","message":"Success onComplete RestResult(13235,List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q))))"}
{"@timestamp":"2020-05-28T17:48:06.031+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-12","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:48:06.032+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-12","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:48:06.034+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-12","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@4286449)"}
{"@timestamp":"2020-05-28T17:48:15.226+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-13","message":"Success onComplete RestResult(9191,List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q))))"}
{"@timestamp":"2020-05-28T17:48:19.637+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-12","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-28T17:48:19.637+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-12","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"♔\",\"letter\":\"K\",\"npieces\":0},{\"label\":\"♕\",\"letter\":\"Q\",\"npieces\":8},{\"label\":\"♖\",\"letter\":\"R\",\"npieces\":0},{\"label\":\"♗\",\"letter\":\"B\",\"npieces\":0},{\"label\":\"♘\",\"letter\":\"N\",\"npieces\":0}]}"}
{"@timestamp":"2020-05-28T17:48:19.638+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-12","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@45156e72)"}
{"@timestamp":"2020-05-28T17:48:29.321+02:00","level":"TRACE","logger_name":"solvers.chess.ChessAsyncSolver","thread_name":"application-my.executor-14","message":"Success onComplete RestResult(9682,List(List(((0,0),Q), ((1,4),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,6),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,6),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,2),Q), ((6,0),Q), ((7,6),Q)), List(((0,6),Q), ((1,1),Q), ((2,5),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,3),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,0),Q), ((3,4),Q), ((4,1),Q), ((5,7),Q), ((6,2),Q), ((7,6),Q)), List(((0,1),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,3),Q), ((4,0),Q), ((5,7),Q), ((6,1),Q), ((7,4),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,1),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,0),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,1),Q), ((6,7),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,7),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,5),Q), ((1,7),Q), ((2,1),Q), ((3,3),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,7),Q), ((3,3),Q), ((4,6),Q), ((5,0),Q), ((6,5),Q), ((7,1),Q)), List(((0,7),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,7),Q), ((2,3),Q), ((3,6),Q), ((4,0),Q), ((5,5),Q), ((6,1),Q), ((7,4),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,3),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,1),Q), ((1,7),Q), ((2,5),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,6),Q), ((6,0),Q), ((7,2),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,4),Q), ((4,0),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,7),Q), ((1,3),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,2),Q), ((1,6),Q), ((2,1),Q), ((3,7),Q), ((4,4),Q), ((5,0),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,6),Q), ((7,0),Q)), List(((0,4),Q), ((1,1),Q), ((2,7),Q), ((3,0),Q), ((4,3),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,2),Q), ((1,0),Q), ((2,6),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,3),Q), ((7,5),Q)), List(((0,6),Q), ((1,1),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,2),Q), ((7,5),Q)), List(((0,7),Q), ((1,1),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,2),Q), ((1,5),Q), ((2,7),Q), ((3,0),Q), ((4,4),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,1),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,3),Q), ((5,7),Q), ((6,0),Q), ((7,4),Q)), List(((0,1),Q), ((1,5),Q), ((2,0),Q), ((3,6),Q), ((4,3),Q), ((5,7),Q), ((6,2),Q), ((7,4),Q)), List(((0,3),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,4),Q), ((7,1),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,7),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,4),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,3),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,1),Q), ((1,3),Q), ((2,5),Q), ((3,7),Q), ((4,2),Q), ((5,0),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,5),Q), ((6,1),Q), ((7,6),Q)), List(((0,6),Q), ((1,4),Q), ((2,2),Q), ((3,0),Q), ((4,5),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,7),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,1),Q), ((5,4),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,0),Q), ((3,4),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,3),Q), ((7,6),Q)), List(((0,5),Q), ((1,1),Q), ((2,6),Q), ((3,0),Q), ((4,3),Q), ((5,7),Q), ((6,4),Q), ((7,2),Q)), List(((0,3),Q), ((1,7),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,6),Q), ((6,1),Q), ((7,5),Q)), List(((0,6),Q), ((1,0),Q), ((2,2),Q), ((3,7),Q), ((4,5),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,6),Q), ((2,0),Q), ((3,7),Q), ((4,4),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,0),Q), ((2,4),Q), ((3,1),Q), ((4,7),Q), ((5,2),Q), ((6,6),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,7),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,6),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,2),Q), ((4,7),Q), ((5,5),Q), ((6,3),Q), ((7,1),Q)), List(((0,0),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,6),Q), ((5,3),Q), ((6,1),Q), ((7,4),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,4),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,5),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,4),Q), ((5,7),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,6),Q), ((2,0),Q), ((3,3),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,2),Q)), List(((0,3),Q), ((1,1),Q), ((2,6),Q), ((3,2),Q), ((4,5),Q), ((5,7),Q), ((6,4),Q), ((7,0),Q)), List(((0,1),Q), ((1,6),Q), ((2,2),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,6),Q), ((6,2),Q), ((7,5),Q)), List(((0,5),Q), ((1,2),Q), ((2,4),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,1),Q), ((7,7),Q)), List(((0,3),Q), ((1,0),Q), ((2,4),Q), ((3,7),Q), ((4,5),Q), ((5,2),Q), ((6,6),Q), ((7,1),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,6),Q), ((7,3),Q)), List(((0,1),Q), ((1,5),Q), ((2,7),Q), ((3,2),Q), ((4,0),Q), ((5,3),Q), ((6,6),Q), ((7,4),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,3),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,1),Q), ((4,5),Q), ((5,0),Q), ((6,2),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,4),Q), ((4,6),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,7),Q), ((2,0),Q), ((3,2),Q), ((4,5),Q), ((5,1),Q), ((6,6),Q), ((7,4),Q)), List(((0,3),Q), ((1,1),Q), ((2,7),Q), ((3,5),Q), ((4,0),Q), ((5,2),Q), ((6,4),Q), ((7,6),Q)), List(((0,4),Q), ((1,0),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,6),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,0),Q)), List(((0,6),Q), ((1,2),Q), ((2,0),Q), ((3,5),Q), ((4,7),Q), ((5,4),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,0),Q), ((2,7),Q), ((3,5),Q), ((4,2),Q), ((5,6),Q), ((6,1),Q), ((7,3),Q)), List(((0,4),Q), ((1,7),Q), ((2,3),Q), ((3,0),Q), ((4,6),Q), ((5,1),Q), ((6,5),Q), ((7,2),Q)), List(((0,6),Q), ((1,3),Q), ((2,1),Q), ((3,4),Q), ((4,7),Q), ((5,0),Q), ((6,2),Q), ((7,5),Q)), List(((0,3),Q), ((1,6),Q), ((2,2),Q), ((3,7),Q), ((4,1),Q), ((5,4),Q), ((6,0),Q), ((7,5),Q)), List(((0,4),Q), ((1,6),Q), ((2,3),Q), ((3,0),Q), ((4,2),Q), ((5,7),Q), ((6,5),Q), ((7,1),Q)), List(((0,2),Q), ((1,4),Q), ((2,1),Q), ((3,7),Q), ((4,0),Q), ((5,6),Q), ((6,3),Q), ((7,5),Q)), List(((0,0),Q), ((1,6),Q), ((2,3),Q), ((3,5),Q), ((4,7),Q), ((5,1),Q), ((6,4),Q), ((7,2),Q)), List(((0,0),Q), ((1,6),Q), ((2,4),Q), ((3,7),Q), ((4,1),Q), ((5,3),Q), ((6,5),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,0),Q), ((5,3),Q), ((6,7),Q), ((7,4),Q)), List(((0,2),Q), ((1,5),Q), ((2,1),Q), ((3,6),Q), ((4,4),Q), ((5,0),Q), ((6,7),Q), ((7,3),Q)), List(((0,5),Q), ((1,3),Q), ((2,6),Q), ((3,0),Q), ((4,2),Q), ((5,4),Q), ((6,1),Q), ((7,7),Q)), List(((0,4),Q), ((1,6),Q), ((2,1),Q), ((3,5),Q), ((4,2),Q), ((5,0),Q), ((6,3),Q), ((7,7),Q)), List(((0,6),Q), ((1,2),Q), ((2,7),Q), ((3,1),Q), ((4,4),Q), ((5,0),Q), ((6,5),Q), ((7,3),Q)), List(((0,3),Q), ((1,6),Q), ((2,4),Q), ((3,2),Q), ((4,0),Q), ((5,5),Q), ((6,7),Q), ((7,1),Q)), List(((0,4),Q), ((1,2),Q), ((2,0),Q), ((3,6),Q), ((4,1),Q), ((5,7),Q), ((6,5),Q), ((7,3),Q)), List(((0,5),Q), ((1,2),Q), ((2,6),Q), ((3,1),Q), ((4,7),Q), ((5,4),Q), ((6,0),Q), ((7,3),Q)), List(((0,4),Q), ((1,1),Q), ((2,5),Q), ((3,0),Q), ((4,6),Q), ((5,3),Q), ((6,7),Q), ((7,2),Q)), List(((0,2),Q), ((1,5),Q), ((2,3),Q), ((3,0),Q), ((4,7),Q), ((5,4),Q), ((6,6),Q), ((7,1),Q))))"}
{"@timestamp":"2020-05-29T14:35:01.671+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-29T14:35:01.949+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-29T14:35:07.278+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"onClientError: statusCode = 404, uri =  /v1/games/chess/abcd, message = "}
{"@timestamp":"2020-05-29T14:35:07.463+02:00","level":"DEBUG","logger_name":"play.api.libs.Files$DefaultTemporaryFileCreator","thread_name":"application-akka.actor.internal-dispatcher-4","message":"deletePath: deleting = C:\\Temp\\playtemp6220083419442802181"}
{"@timestamp":"2020-05-29T14:38:04.578+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-29T14:38:05.019+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-29T14:38:10.978+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"onClientError: statusCode = 404, uri =  /v1/games/chess/abcd, message = "}
{"@timestamp":"2020-05-29T14:45:31.977+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-29T14:45:32.269+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-29T14:45:37.411+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"onClientError: statusCode = 404, uri =  /v1/games/chess/abcd, message = "}
{"@timestamp":"2020-05-29T14:45:37.843+02:00","level":"DEBUG","logger_name":"play.api.libs.Files$DefaultTemporaryFileCreator","thread_name":"application-akka.actor.internal-dispatcher-5","message":"deletePath: deleting = C:\\Temp\\playtemp5991214409154989682"}
{"@timestamp":"2020-05-29T14:46:33.678+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-29T14:46:34.090+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-29T14:46:39.082+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"ScalaTest-run-running-RESTChessSpec","message":"onClientError: statusCode = 404, uri =  /v1/games/chess/abcd, message = "}
{"@timestamp":"2020-05-29T15:52:15.220+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-10","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-29T15:52:15.277+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-10","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-29T15:52:15.651+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-10","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-29T15:52:15.660+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-10","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-29T17:06:21.052+02:00","level":"DEBUG","logger_name":"play.api.http.HttpConfiguration","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Generated dev mode secret 92e3e91202dca8b628ee2277de035403 for app at file:/C:/Users/0012426/git/ang-games/server/ang-games-server/target/scala-2.13/classes/application.conf"}
{"@timestamp":"2020-05-29T17:06:21.123+02:00","level":"DEBUG","logger_name":"play.api.libs.concurrent.ActorSystemProvider","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Starting application default Akka system: application"}
{"@timestamp":"2020-05-29T17:06:21.405+02:00","level":"INFO","logger_name":"play.api.http.EnabledFilters","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):\n\n    play.filters.csrf.CSRFFilter\n    play.filters.headers.SecurityHeadersFilter\n    play.filters.hosts.AllowedHostsFilter\n"}
{"@timestamp":"2020-05-29T17:06:21.411+02:00","level":"INFO","logger_name":"play.api.Play","thread_name":"play-dev-mode-akka.actor.default-dispatcher-6","message":"Application started (Dev) (no global state)"}
{"@timestamp":"2020-05-29T17:08:28.654+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-29T17:08:28.656+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"{\"dimension\":8,\"pieces\":[\"K4\"]}"}
{"@timestamp":"2020-05-29T17:08:28.836+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-8","message":"JsError"}
{"@timestamp":"2020-05-29T17:11:46.790+02:00","level":"DEBUG","logger_name":"play.api.mvc.PlayBodyParsers","thread_name":"application-akka.actor.default-dispatcher-9","message":"Invalid Json","stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1840)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:712)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:637)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2021)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1672)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:758)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:229)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:143)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:138)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:4189)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2476)\r\n\tat play.api.libs.json.jackson.JacksonJson$.parseJsValue(JacksonJson.scala:288)\r\n\tat play.api.libs.json.StaticBinding$.parseJsValue(StaticBinding.scala:21)\r\n\tat play.api.libs.json.Json$.parse(Json.scala:175)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantJson$1(BodyParsers.scala:633)\r\n\tat play.api.mvc.PlayBodyParsers.parseBody$1(BodyParsers.scala:1054)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantBodyParser$5(BodyParsers.scala:1069)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-29T17:11:46.791+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-9","message":"onClientError: statusCode = 400, uri = /v1/games/chess, message = Invalid Json: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]"}
{"@timestamp":"2020-05-29T17:12:05.740+02:00","level":"DEBUG","logger_name":"play.api.mvc.PlayBodyParsers","thread_name":"application-akka.actor.default-dispatcher-10","message":"Invalid Json","stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1840)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:712)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:637)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2021)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1672)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:758)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:229)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:143)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:138)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:4189)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2476)\r\n\tat play.api.libs.json.jackson.JacksonJson$.parseJsValue(JacksonJson.scala:288)\r\n\tat play.api.libs.json.StaticBinding$.parseJsValue(StaticBinding.scala:21)\r\n\tat play.api.libs.json.Json$.parse(Json.scala:175)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantJson$1(BodyParsers.scala:633)\r\n\tat play.api.mvc.PlayBodyParsers.parseBody$1(BodyParsers.scala:1054)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantBodyParser$5(BodyParsers.scala:1069)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-29T17:12:05.745+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-10","message":"onClientError: statusCode = 400, uri = /v1/games/chess, message = Invalid Json: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]"}
{"@timestamp":"2020-05-29T17:13:57.887+02:00","level":"DEBUG","logger_name":"play.api.mvc.PlayBodyParsers","thread_name":"application-akka.actor.default-dispatcher-11","message":"Invalid Json","stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unexpected character (''' (code 39)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 2, column: 10]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1840)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:712)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:637)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2655)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:812)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:229)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:143)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:138)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:4189)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2476)\r\n\tat play.api.libs.json.jackson.JacksonJson$.parseJsValue(JacksonJson.scala:288)\r\n\tat play.api.libs.json.StaticBinding$.parseJsValue(StaticBinding.scala:21)\r\n\tat play.api.libs.json.Json$.parse(Json.scala:175)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantJson$1(BodyParsers.scala:633)\r\n\tat play.api.mvc.PlayBodyParsers.parseBody$1(BodyParsers.scala:1054)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantBodyParser$5(BodyParsers.scala:1069)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-29T17:13:57.887+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-11","message":"onClientError: statusCode = 400, uri = /v1/games/chess, message = Invalid Json: Unexpected character (''' (code 39)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 2, column: 10]"}
{"@timestamp":"2020-05-29T17:14:50.809+02:00","level":"DEBUG","logger_name":"play.api.mvc.PlayBodyParsers","thread_name":"application-akka.actor.default-dispatcher-12","message":"Invalid Json","stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1840)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:712)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:637)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2021)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1672)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:758)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:229)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:143)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:138)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:4189)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2476)\r\n\tat play.api.libs.json.jackson.JacksonJson$.parseJsValue(JacksonJson.scala:288)\r\n\tat play.api.libs.json.StaticBinding$.parseJsValue(StaticBinding.scala:21)\r\n\tat play.api.libs.json.Json$.parse(Json.scala:175)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantJson$1(BodyParsers.scala:633)\r\n\tat play.api.mvc.PlayBodyParsers.parseBody$1(BodyParsers.scala:1054)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantBodyParser$5(BodyParsers.scala:1069)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-29T17:14:50.809+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-12","message":"onClientError: statusCode = 400, uri = /v1/games/chess, message = Invalid Json: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]"}
{"@timestamp":"2020-05-29T17:15:29.427+02:00","level":"DEBUG","logger_name":"play.api.mvc.PlayBodyParsers","thread_name":"application-akka.actor.default-dispatcher-13","message":"Invalid Json","stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1840)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:712)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:637)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2021)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1672)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:758)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:229)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:143)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:138)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:4189)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2476)\r\n\tat play.api.libs.json.jackson.JacksonJson$.parseJsValue(JacksonJson.scala:288)\r\n\tat play.api.libs.json.StaticBinding$.parseJsValue(StaticBinding.scala:21)\r\n\tat play.api.libs.json.Json$.parse(Json.scala:175)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantJson$1(BodyParsers.scala:633)\r\n\tat play.api.mvc.PlayBodyParsers.parseBody$1(BodyParsers.scala:1054)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantBodyParser$5(BodyParsers.scala:1069)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-29T17:15:29.428+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-13","message":"onClientError: statusCode = 400, uri = /v1/games/chess, message = Invalid Json: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]"}
{"@timestamp":"2020-05-29T17:17:03.514+02:00","level":"DEBUG","logger_name":"play.api.mvc.PlayBodyParsers","thread_name":"application-akka.actor.default-dispatcher-14","message":"Invalid Json","stack_trace":"com.fasterxml.jackson.core.JsonParseException: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1840)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:712)\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:637)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2021)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1672)\r\n\tat com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:758)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:229)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:143)\r\n\tat play.api.libs.json.jackson.JsValueDeserializer.deserialize(JacksonJson.scala:138)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:4189)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2476)\r\n\tat play.api.libs.json.jackson.JacksonJson$.parseJsValue(JacksonJson.scala:288)\r\n\tat play.api.libs.json.StaticBinding$.parseJsValue(StaticBinding.scala:21)\r\n\tat play.api.libs.json.Json$.parse(Json.scala:175)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantJson$1(BodyParsers.scala:633)\r\n\tat play.api.mvc.PlayBodyParsers.parseBody$1(BodyParsers.scala:1054)\r\n\tat play.api.mvc.PlayBodyParsers.$anonfun$tolerantBodyParser$5(BodyParsers.scala:1069)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat scala.Function1.$anonfun$andThen$1(Function1.scala:85)\r\n\tat play.api.libs.streams.StrictAccumulator.run(Accumulator.scala:200)\r\n\tat play.core.server.AkkaHttpServer.$anonfun$runAction$4(AkkaHttpServer.scala:417)\r\n\tat akka.http.scaladsl.util.FastFuture$.strictTransform$1(FastFuture.scala:41)\r\n\tat akka.http.scaladsl.util.FastFuture$.$anonfun$transformWith$3(FastFuture.scala:51)\r\n\tat scala.concurrent.impl.Promise$Transformation.run(Promise.scala:447)\r\n\tat akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:56)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:93)\r\n\tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\r\n\tat scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:94)\r\n\tat akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:93)\r\n\tat akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:48)\r\n\tat akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:48)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n"}
{"@timestamp":"2020-05-29T17:17:03.514+02:00","level":"DEBUG","logger_name":"application.ErrorHandler","thread_name":"application-akka.actor.default-dispatcher-14","message":"onClientError: statusCode = 400, uri = /v1/games/chess, message = Invalid Json: Unexpected character ('l' (code 108)): was expecting double-quote to start field name\n at [Source: (akka.util.ByteIterator$ByteArrayIterator$$anon$1); line: 3, column: 16]"}
{"@timestamp":"2020-05-29T17:17:33.986+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-15","message":"POST /v1/games/chess"}
{"@timestamp":"2020-05-29T17:17:33.988+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-15","message":"{\"dim\":\"8x8\",\"pieces\":[{\"label\":\"\",\"letter\":\"Q\",\"npieces\":8}]}"}
{"@timestamp":"2020-05-29T17:17:34.026+02:00","level":"TRACE","logger_name":"controllers.ChessPostController","thread_name":"application-akka.actor.default-dispatcher-15","message":"JsSuccess PostFormInput(8x8,[Lcontrollers.PieceInput;@3297938)"}
